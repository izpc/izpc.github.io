<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>how-to-start-custom-vaultwarden</title>
      <link href="/2024/09/29/how-to-start-custom-vaultwarden/"/>
      <url>/2024/09/29/how-to-start-custom-vaultwarden/</url>
      
        <content type="html"><![CDATA[<h1 id="如何启动私有-Vaultwarden"><a href="#如何启动私有-Vaultwarden" class="headerlink" title="如何启动私有 Vaultwarden"></a>如何启动私有 Vaultwarden</h1><p><code>docker-compose.yml</code> 配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.9&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"> <span class="attr">vaultwarden:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">vaultwarden/server:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">vaultwarden</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">WEBSOCKET_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SIGNUPS_ALLOWED=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ADMIN_TOKEN=yourpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/vaultwarden:/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3012</span><span class="string">:3012</span></span><br></pre></td></tr></table></figure><h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span> local.example.com;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span> <span class="number">443</span> ssl http2;</span><br><span class="line">  <span class="attribute">listen</span> [::]:<span class="number">443</span> ssl http2;</span><br><span class="line">  <span class="attribute">server_name</span> local.example.com;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/repo.example.com/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">  <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/repo.example.com/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Allow large attachments</span></span><br><span class="line">  <span class="attribute">client_max_body_size</span> <span class="number">128M</span>;</span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> /notifications/hub &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:3012;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="section">location</span> /notifications/hub/negotiate &#123;</span><br><span class="line">    <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>how-to-start-database-proxy</title>
      <link href="/2024/09/29/how-to-start-database-proxy/"/>
      <url>/2024/09/29/how-to-start-database-proxy/</url>
      
        <content type="html"><![CDATA[<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span> www-data;</span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"><span class="attribute">pid</span> /run/nginx.pid;</span><br><span class="line"><span class="attribute">include</span> /etc/nginx/modules-enabled/<span class="regexp">*.conf</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">worker_rlimit_nofile</span> <span class="number">65535</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">10240</span>;</span><br><span class="line">    <span class="comment"># multi_accept on;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">allow</span> all;</span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># Basic Settings</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">## Start nexus https://help.sonatype.com/repomanager3/planning-your-implementation/run-behind-a-reverse-proxy</span></span><br><span class="line">        <span class="attribute">proxy_send_timeout</span> <span class="number">120</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">        <span class="attribute">proxy_buffering</span>    <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_request_buffering</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="comment">#keepalive_timeout  5 5;</span></span><br><span class="line">        <span class="comment">#tcp_nodelay        on;</span></span><br><span class="line">        <span class="comment">## End nexus</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nopush</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span> <span class="number">65</span>;</span><br><span class="line">    <span class="attribute">types_hash_max_size</span> <span class="number">2048</span>;</span><br><span class="line">    <span class="comment"># server_tokens off;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># server_names_hash_bucket_size 64;</span></span><br><span class="line">    <span class="comment"># server_name_in_redirect off;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span> application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># SSL Settings</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>; <span class="comment"># Dropping SSLv3, ref: POODLE</span></span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># Logging Settings</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/access.log;</span><br><span class="line">    <span class="attribute">error_log</span> /var/log/nginx/<span class="literal">error</span>.log;</span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># Gzip Settings</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># gzip_vary on;</span></span><br><span class="line">    <span class="comment"># gzip_proxied any;</span></span><br><span class="line">    <span class="comment"># gzip_comp_level 6;</span></span><br><span class="line">    <span class="comment"># gzip_buffers 16 8k;</span></span><br><span class="line">    <span class="comment"># gzip_http_version 1.1;</span></span><br><span class="line">    <span class="comment"># gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># Virtual Host Configs</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">stream</span> &#123;</span><br><span class="line">    <span class="attribute">log_format</span> proxy <span class="string">&#x27;<span class="variable">$remote_addr</span> [<span class="variable">$time_local</span>] &#x27;</span></span><br><span class="line">                 <span class="string">&#x27;<span class="variable">$protocol</span> <span class="variable">$status</span> <span class="variable">$bytes_sent</span> <span class="variable">$bytes_received</span> &#x27;</span></span><br><span class="line">                 <span class="string">&#x27;<span class="variable">$session_time</span> &quot;<span class="variable">$upstream_addr</span>&quot; &#x27;</span></span><br><span class="line">                 <span class="string">&#x27;&quot;<span class="variable">$upstream_bytes_sent</span>&quot; &quot;<span class="variable">$upstream_bytes_received</span>&quot; &quot;<span class="variable">$upstream_connect_time</span>&quot;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/tcp-access.log proxy ;</span><br><span class="line">    <span class="attribute">open_log_file_cache</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># mysql: 3306</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">33078</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> your.domain.com:<span class="number">3306</span>;</span><br><span class="line">        <span class="attribute">proxy_timeout</span> <span class="number">300m</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何启动私有 LDAP</title>
      <link href="/2024/09/29/how-to-start-private-ldap/"/>
      <url>/2024/09/29/how-to-start-private-ldap/</url>
      
        <content type="html"><![CDATA[<h1 id="如何启动私有-LDAP"><a href="#如何启动私有-LDAP" class="headerlink" title="如何启动私有 LDAP"></a>如何启动私有 LDAP</h1><p><code>docker-compose.yml</code> 配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">openldap:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">osixia/openldap:1.5.0</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ldap</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;389:389&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;636:636&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LDAP_ORGANISATION=foo</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LDAP_DOMAIN=bar.com</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LDAP_ADMIN_PASSWORD=foobar</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LDAP_CONFIG_PASSWORD=foobar</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;PWD&#125;/ldap:/var/lib/ldap</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;PWD&#125;/slapd.d:/etc/ldap/slapd.d</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> ldap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>how-to-start-private-jenkins</title>
      <link href="/2024/09/29/how-to-start-private-jenkins/"/>
      <url>/2024/09/29/how-to-start-private-jenkins/</url>
      
        <content type="html"><![CDATA[<h1 id="如何启动私有-Jenkins"><a href="#如何启动私有-Jenkins" class="headerlink" title="如何启动私有 Jenkins"></a>如何启动私有 Jenkins</h1><p><code>docker-compose.yml</code> 配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">jenkins:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.foobar.com/jenkins</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jenkins</span></span><br><span class="line">    <span class="attr">extra_hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;bitbucket.foobar.com:127.0.0.1&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:8080:8080&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:50000:50000&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;HOME&#125;/jenkins/jenkins_home:/var/jenkins_home</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;HOME&#125;/.docker:/root/.docker</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;HOME&#125;/.ssh:/root/.ssh</span></span><br><span class="line">      <span class="comment">#- /usr/bin/docker:/usr/bin/docker</span></span><br><span class="line">      <span class="comment">#- /usr/bin/docker-compose:/usr/bin/docker-compose</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment">#- JENKINS_OPTS=&quot;--sessionTimeout=0&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">JENKINS_OPTS=--sessionTimeout=43200</span> <span class="string">--sessionEviction=604800</span></span><br></pre></td></tr></table></figure><h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">upstream</span> jenkins &#123;</span><br><span class="line">  <span class="attribute">keepalive</span> <span class="number">32</span>; <span class="comment"># keepalive connections</span></span><br><span class="line">  <span class="attribute">server</span> <span class="number">127.0.0.1:8080</span>; <span class="comment"># jenkins ip and port</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Required for Jenkins websocket agents</span></span><br><span class="line"><span class="attribute">map</span> <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">  <span class="attribute">default</span> upgrade;</span><br><span class="line">  &#x27;&#x27; close;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;       <span class="comment"># Listen on port 80 for IPv4 requests</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">server_name</span>     deploy.example.com local.example.com;  <span class="comment"># replace &#x27;jenkins.example.com&#x27; with your server domain name</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># this is the jenkins web root directory</span></span><br><span class="line">  <span class="comment"># (mentioned in the output of &quot;systemctl cat jenkins&quot;)</span></span><br><span class="line">  <span class="attribute">access_log</span>      /var/log/nginx/jenkins.access.log;</span><br><span class="line">  <span class="attribute">error_log</span>       /var/log/nginx/jenkins.<span class="literal">error</span>.log;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># pass through headers from Jenkins that Nginx considers invalid</span></span><br><span class="line">  <span class="attribute">ignore_invalid_headers</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> <span class="regexp">~ &quot;^/static/[0-9a-fA-F]</span>&#123;8&#125;\/(.*)$&quot; &#123;</span><br><span class="line">    <span class="comment"># rewrite all static files into requests to the root</span></span><br><span class="line">    <span class="comment"># E.g /static/12345678/css/something.css will become /css/something.css</span></span><br><span class="line">    <span class="attribute">rewrite</span> <span class="string">&quot;^/static/[0-9a-fA-F]&#123;8&#125;\/(.*)&quot;</span> /<span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="section">location</span> /userContent &#123;</span><br><span class="line">    <span class="comment"># have nginx handle all the static requests to userContent folder</span></span><br><span class="line">    <span class="comment"># note : This is the $JENKINS_HOME dir</span></span><br><span class="line">    <span class="attribute">root</span> /var/lib/jenkins/;</span><br><span class="line">    <span class="attribute">if</span> (!-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">      <span class="comment"># this file does not exist, might be a directory or a /**view** url</span></span><br><span class="line">      <span class="attribute">rewrite</span> (.*) /<span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line">      break;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="section">location</span> / &#123;</span><br><span class="line">      <span class="comment"># allow 1.1.1.1; # allow ip address to access the site</span></span><br><span class="line">      <span class="comment"># deny all;</span></span><br><span class="line"></span><br><span class="line">      <span class="attribute">sendfile</span> <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_pass</span>         http://jenkins;</span><br><span class="line">      <span class="attribute">proxy_redirect</span>     default;</span><br><span class="line">      <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">      <span class="comment"># Required for Jenkins websocket agents</span></span><br><span class="line">      <span class="attribute">proxy_set_header</span>   Connection        <span class="variable">$connection_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   Upgrade           <span class="variable">$http_upgrade</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   Host              <span class="variable">$host</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Real-IP         <span class="variable">$remote_addr</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Forwarded-For   <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">      <span class="attribute">proxy_set_header</span>   X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">      <span class="attribute">proxy_max_temp_file_size</span> <span class="number">0</span>;</span><br><span class="line">      <span class="comment">#this is the maximum upload size</span></span><br><span class="line">      <span class="attribute">client_max_body_size</span>       <span class="number">10m</span>;</span><br><span class="line">      <span class="attribute">client_body_buffer_size</span>    <span class="number">128k</span>;</span><br><span class="line">      <span class="attribute">proxy_connect_timeout</span>      <span class="number">90</span>;</span><br><span class="line">      <span class="attribute">proxy_send_timeout</span>         <span class="number">90</span>;</span><br><span class="line">      <span class="attribute">proxy_read_timeout</span>         <span class="number">90</span>;</span><br><span class="line">      <span class="attribute">proxy_buffering</span>            <span class="literal">off</span>;</span><br><span class="line">      <span class="attribute">proxy_request_buffering</span>    <span class="literal">off</span>; <span class="comment"># Required for HTTP CLI commands</span></span><br><span class="line">      <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;&quot;</span>; <span class="comment"># Clear for keepalive</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/repo.example.com/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/repo.example.com/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">include</span> /etc/letsencrypt/options-ssl-nginx.conf; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$host</span> = deploy.example.com) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$host</span> = local.example.com) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attribute">listen</span>          <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">server_name</span>     deploy.example.com local.example.com;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">404</span>; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建私有仓库</title>
      <link href="/2024/09/29/how-to-start-private-nexus-repo/"/>
      <url>/2024/09/29/how-to-start-private-nexus-repo/</url>
      
        <content type="html"><![CDATA[<h1 id="如何搭建私有仓库"><a href="#如何搭建私有仓库" class="headerlink" title="如何搭建私有仓库"></a>如何搭建私有仓库</h1><p>Nexus Repository Manager 是一个强大的仓库管理器，支持多种包管理器，如 Maven、npm、Docker、Helm、PyPI 等。</p><p>在本文中，我们将介绍如何使用 Nexus Repository Manager 搭建私有仓库，以便于管理和分享软件包。</p><p><code>docker-compose.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nexus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sonatype/nexus3</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nexus</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:8081:8081&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:5000:5000&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;HOME&#125;/nexus-data:/nexus-data</span></span><br></pre></td></tr></table></figure><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p><a href="https://help.sonatype.com/en/run-behind-a-reverse-proxy.html">https://help.sonatype.com/en/run-behind-a-reverse-proxy.html</a></p><p><code>repo.example.com</code> </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$host</span> = repo.example.com) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> repo.example.com;</span><br><span class="line">        <span class="comment"># return 301 https://$host$request_uri;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># allow large uploads of files - refer to nginx documentation</span></span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">1G</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># optimize downloading files larger than 1G - refer to nginx doc before adjusting</span></span><br><span class="line">        <span class="comment">#proxy_max_temp_file_size 2G;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:8080/;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span> repo.example.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># allow large uploads of files - refer to nginx documentation</span></span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">1G</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># optimize downloading files larger than 1G - refer to nginx doc before adjusting</span></span><br><span class="line">        <span class="comment">#proxy_max_temp_file_size 2G;</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/repo.example.com/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/repo.example.com/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">        <span class="attribute">include</span> /etc/letsencrypt/options-ssl-nginx.conf; <span class="comment"># managed by Certbot</span></span><br><span class="line">        <span class="attribute">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:8081/;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="string">&quot;https&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Docker-Registry"><a href="#Docker-Registry" class="headerlink" title="Docker Registry"></a>Docker Registry</h2><p><code>docker.example.com</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$host</span> = docker.example.com) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> docker.example.com;</span><br><span class="line">        <span class="comment"># return 301 https://$host$request_uri;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># allow large uploads of files - refer to nginx documentation</span></span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">10G</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># optimize downloading files larger than 1G - refer to nginx doc before adjusting</span></span><br><span class="line">        <span class="comment">#proxy_max_temp_file_size 2G;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:5000/;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span> docker.example.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># allow large uploads of files - refer to nginx documentation</span></span><br><span class="line">        <span class="attribute">client_max_body_size</span> <span class="number">10G</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># optimize downloading files larger than 1G - refer to nginx doc before adjusting</span></span><br><span class="line">        <span class="comment">#proxy_max_temp_file_size 2G;</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/repo.example.com/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/repo.example.com/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line">        <span class="attribute">include</span> /etc/letsencrypt/options-ssl-nginx.conf; <span class="comment"># managed by Certbot</span></span><br><span class="line">        <span class="attribute">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://localhost:5000/;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="string">&quot;https&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Helm-Repository"><a href="#Helm-Repository" class="headerlink" title="Helm Repository"></a>Helm Repository</h2><p><a href="https://sonatype.github.io/helm3-charts/">https://sonatype.github.io/helm3-charts/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> nexus </tag>
            
            <tag> pip </tag>
            
            <tag> npm </tag>
            
            <tag> helm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS Flex 和 Grid 游戏</title>
      <link href="/2024/09/26/game-css-flex-and-grid/"/>
      <url>/2024/09/26/game-css-flex-and-grid/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-Flex-和-Grid-游戏"><a href="#CSS-Flex-和-Grid-游戏" class="headerlink" title="CSS Flex 和 Grid 游戏"></a>CSS Flex 和 Grid 游戏</h1><h2 id="Flexbox-Froggy"><a href="#Flexbox-Froggy" class="headerlink" title="Flexbox Froggy"></a>Flexbox Froggy</h2><p>游戏地址：<a href="https://flexboxfroggy.com/">https://flexboxfroggy.com/</a></p><h2 id="CSS-Grid-Garden"><a href="#CSS-Grid-Garden" class="headerlink" title="CSS Grid Garden"></a>CSS Grid Garden</h2><p>游戏地址：<a href="https://cssgridgarden.com/">https://cssgridgarden.com/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tailwindcss-startup</title>
      <link href="/2024/09/24/tailwindcss-startup/"/>
      <url>/2024/09/24/tailwindcss-startup/</url>
      
        <content type="html"><![CDATA[<h1 id="Tailwind-CSS-入门指南"><a href="#Tailwind-CSS-入门指南" class="headerlink" title="Tailwind CSS 入门指南"></a>Tailwind CSS 入门指南</h1><h2 id="什么是-Tailwind-CSS？"><a href="#什么是-Tailwind-CSS？" class="headerlink" title="什么是 Tailwind CSS？"></a>什么是 Tailwind CSS？</h2><p>Tailwind CSS 是一个实用优先的 CSS 框架，它提供了一组低级的实用工具类，允许开发者直接在 HTML 中应用样式，而不需要编写自定义 CSS。与传统的 CSS 框架（如 Bootstrap 或 Foundation）不同，Tailwind 没有预定义的组件，而是通过一组灵活的工具类来实现设计。</p><h2 id="为什么选择-Tailwind-CSS？"><a href="#为什么选择-Tailwind-CSS？" class="headerlink" title="为什么选择 Tailwind CSS？"></a>为什么选择 Tailwind CSS？</h2><ol><li><strong>高效的开发体验</strong>：Tailwind 提供了大量预定义的实用工具类，可以直接在 HTML 中使用，大大简化了样式的应用过程。</li><li><strong>高度可定制</strong>：Tailwind 的配置文件允许你根据项目需求自定义颜色、间距、字体等各种设计系统变量。</li><li><strong>响应式设计</strong>：Tailwind 内置了响应式设计支持，通过简单的类名即可实现不同屏幕尺寸下的样式调整。</li><li><strong>小文件体积</strong>：通过 PurgeCSS 等工具，Tailwind 可以在生产环境中移除未使用的 CSS 类，从而大大减少最终 CSS 文件的体积。</li></ol><h2 id="安装和配置-Tailwind-CSS"><a href="#安装和配置-Tailwind-CSS" class="headerlink" title="安装和配置 Tailwind CSS"></a>安装和配置 Tailwind CSS</h2><h3 id="安装-Tailwind-CSS"><a href="#安装-Tailwind-CSS" class="headerlink" title="安装 Tailwind CSS"></a>安装 Tailwind CSS</h3><p>首先，通过 npm 或 yarn 安装 Tailwind CSS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install tailwindcss</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add tailwindcss</span><br></pre></td></tr></table></figure><h3 id="初始化-Tailwind-配置"><a href="#初始化-Tailwind-配置" class="headerlink" title="初始化 Tailwind 配置"></a>初始化 Tailwind 配置</h3><p>安装完成后，你需要初始化 Tailwind 的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx tailwindcss init</span><br></pre></td></tr></table></figure><p>这将在你的项目根目录下生成一个 <code>tailwind.config.js</code> 文件，你可以在其中自定义 Tailwind 的配置。</p><h3 id="引入-Tailwind-CSS"><a href="#引入-Tailwind-CSS" class="headerlink" title="引入 Tailwind CSS"></a>引入 Tailwind CSS</h3><p>在你的 CSS 文件中引入 Tailwind 的基础样式、组件样式和实用工具样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@tailwind</span> base;</span><br><span class="line"><span class="keyword">@tailwind</span> components;</span><br><span class="line"><span class="keyword">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure><h3 id="配置-PurgeCSS（可选）"><a href="#配置-PurgeCSS（可选）" class="headerlink" title="配置 PurgeCSS（可选）"></a>配置 PurgeCSS（可选）</h3><p>为了在生产环境中移除未使用的 CSS 类，你可以配置 PurgeCSS。以下是一个基本的配置示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tailwind.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">purge</span>: [<span class="string">&#x27;./src/**/*.&#123;js,jsx,ts,tsx,html&#125;&#x27;</span>],</span><br><span class="line">  <span class="attr">darkMode</span>: <span class="literal">false</span>, <span class="comment">// or &#x27;media&#x27; or &#x27;class&#x27;</span></span><br><span class="line">  <span class="attr">theme</span>: &#123;</span><br><span class="line">    <span class="attr">extend</span>: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">variants</span>: &#123;</span><br><span class="line">    <span class="attr">extend</span>: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="使用-Tailwind-CSS-类"><a href="#使用-Tailwind-CSS-类" class="headerlink" title="使用 Tailwind CSS 类"></a>使用 Tailwind CSS 类</h2><p>现在，你可以在 HTML 文件中使用 Tailwind 提供的实用工具类。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bg-blue-500 text-white p-4 rounded&quot;</span>&gt;</span></span><br><span class="line">  Hello, Tailwind CSS!</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个例子中，我们使用了 <code>bg-blue-500</code> 设置背景颜色，<code>text-white</code> 设置文字颜色，<code>p-4</code> 设置内边距，<code>rounded</code> 设置圆角。</p><h2 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h2><h3 id="实用工具优先"><a href="#实用工具优先" class="headerlink" title="实用工具优先"></a>实用工具优先</h3><p>Tailwind CSS 的核心理念是“实用工具优先”，即通过一组小而灵活的工具类来实现设计。你可以通过组合这些工具类来实现复杂的布局和样式，而不需要编写自定义 CSS。</p><h3 id="响应式设计"><a href="#响应式设计" class="headerlink" title="响应式设计"></a>响应式设计</h3><p>Tailwind 提供了简单的类名前缀来实现响应式设计。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-4 md:p-8 lg:p-12&quot;</span>&gt;</span></span><br><span class="line">  Responsive Padding</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>p-4</code> 设置了默认的内边距，<code>md:p-8</code> 在中等屏幕（<code>min-width: 768px</code>）上设置内边距为 8，<code>lg:p-12</code> 在大屏幕（<code>min-width: 1024px</code>）上设置内边距为 12。</p><h3 id="状态变体"><a href="#状态变体" class="headerlink" title="状态变体"></a>状态变体</h3><p>Tailwind 允许你使用状态变体来处理不同状态下的样式。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&quot;</span>&gt;</span></span><br><span class="line">  Hover me</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>hover:bg-blue-700</code> 设置了按钮在悬停状态下的背景颜色。</p><h2 id="在-React-项目中使用-Tailwind-CSS"><a href="#在-React-项目中使用-Tailwind-CSS" class="headerlink" title="在 React 项目中使用 Tailwind CSS"></a>在 React 项目中使用 Tailwind CSS</h2><p>在 React 项目中使用 Tailwind CSS 非常简单。你可以按照上述步骤安装和配置 Tailwind CSS，然后在你的组件中使用 Tailwind 的实用工具类。</p><h3 id="创建-React-项目"><a href="#创建-React-项目" class="headerlink" title="创建 React 项目"></a>创建 React 项目</h3><p>首先，创建一个新的 React 项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app my-tailwind-app</span><br><span class="line"><span class="built_in">cd</span> my-tailwind-app</span><br></pre></td></tr></table></figure><h3 id="安装-Tailwind-CSS-1"><a href="#安装-Tailwind-CSS-1" class="headerlink" title="安装 Tailwind CSS"></a>安装 Tailwind CSS</h3><p>在项目中安装 Tailwind CSS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install tailwindcss</span><br><span class="line">npx tailwindcss init</span><br></pre></td></tr></table></figure><h3 id="配置-Tailwind-CSS"><a href="#配置-Tailwind-CSS" class="headerlink" title="配置 Tailwind CSS"></a>配置 Tailwind CSS</h3><p>在 <code>src</code> 目录下创建一个 <code>styles.css</code> 文件，并引入 Tailwind 的基础样式、组件样式和实用工具样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* src/styles.css */</span></span><br><span class="line"><span class="keyword">@tailwind</span> base;</span><br><span class="line"><span class="keyword">@tailwind</span> components;</span><br><span class="line"><span class="keyword">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure><p>在 <code>src/index.js</code> 中引入这个 CSS 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles.css&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="使用-Tailwind-CSS-类-1"><a href="#使用-Tailwind-CSS-类-1" class="headerlink" title="使用 Tailwind CSS 类"></a>使用 Tailwind CSS 类</h3><p>现在，你可以在 React 组件中使用 Tailwind 提供的实用工具类。例如：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;min-h-screen bg-gray-100 flex items-center justify-center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;bg-white p-8 rounded shadow-md&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;text-2xl font-bold mb-4&quot;</span>&gt;</span>Hello, Tailwind CSS!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;text-gray-700&quot;</span>&gt;</span>This is a simple example of using Tailwind CSS in a React project.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><p>在这个例子中，我们使用了 Tailwind 的工具类来设置背景颜色、内边距、圆角、阴影等样式。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>Tailwind CSS 是一个功能强大且灵活的 CSS 框架，它通过实用工具类的方式极大地简化了样式的应用过程。无论是快速原型设计还是构建复杂的用户界面，Tailwind CSS 都能提供高效的开发体验。如果你熟悉 CSS、JavaScript、TypeScript 和 React，不妨试试将 Tailwind CSS 引入到你的下一个项目中。</p><h1 id="Referral-Links"><a href="#Referral-Links" class="headerlink" title="Referral Links"></a>Referral Links</h1><ul><li><a href="https://db.montaigne.io/refactoring-ui">https://db.montaigne.io/refactoring-ui</a></li><li><a href="https://gu.ink/2022/refactoring-ui-note-scratch/index.html">https://gu.ink/2022/refactoring-ui-note-scratch/index.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> tailwindcss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell-run-sequence</title>
      <link href="/2024/09/20/shell-run-sequence/"/>
      <url>/2024/09/20/shell-run-sequence/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><blockquote><p>python -m A.py &amp;&amp; python &#x2F;tmp&#x2F;A.py ; python -m B.py &amp;&amp; python &#x2F;tmp&#x2F;B.py 执行的顺序和出错情况是什么样的？</p></blockquote><p>在你的例子中，你希望执行以下命令：</p><ol><li><code>python -m A.py &amp;&amp; python /tmp/A.py</code></li><li><code>python -m B.py &amp;&amp; python /tmp/B.py</code></li></ol><p>每对命令之间用 <code>;</code> 分隔，这意味着即使前面的命令对失败，后面的命令也会执行。每对命令内部用 <code>&amp;&amp;</code> 分隔，这意味着 <code>&amp;&amp;</code> 左侧的命令成功后，才会执行右侧的命令。我们来详细分析一下执行顺序和出错情况：</p><h3 id="执行顺序和出错情况"><a href="#执行顺序和出错情况" class="headerlink" title="执行顺序和出错情况"></a>执行顺序和出错情况</h3><ol><li><p><strong><code>python -m A.py &amp;&amp; python /tmp/A.py</code></strong>:</p><ul><li><code>python -m A.py</code> 执行。</li><li>如果 <code>python -m A.py</code> 成功（退出状态码为 0），则执行 <code>python /tmp/A.py</code>。</li><li>如果 <code>python -m A.py</code> 失败（退出状态码非 0），则跳过 <code>python /tmp/A.py</code>。</li></ul></li><li><p><strong><code>python -m B.py &amp;&amp; python /tmp/B.py</code></strong>:</p><ul><li><code>python -m B.py</code> 执行。</li><li>如果 <code>python -m B.py</code> 成功（退出状态码为 0），则执行 <code>python /tmp/B.py</code>。</li><li>如果 <code>python -m B.py</code> 失败（退出状态码非 0），则跳过 <code>python /tmp/B.py</code>。</li></ul></li></ol><h3 id="具体示例"><a href="#具体示例" class="headerlink" title="具体示例"></a>具体示例</h3><p>假设 <code>A.py</code> 和 <code>B.py</code> 的内容如下：</p><ul><li><p><code>A.py</code>:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.exit(<span class="number">0</span>)  <span class="comment"># 成功</span></span><br></pre></td></tr></table></figure></li><li><p><code>B.py</code>:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.exit(<span class="number">1</span>)  <span class="comment"># 失败</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h3><ol><li><code>python -m A.py</code> 成功。</li><li>因为 <code>python -m A.py</code> 成功，所以执行 <code>python /tmp/A.py</code>。</li><li><code>python /tmp/A.py</code> 成功或失败（不影响后续命令）。</li><li><code>python -m B.py</code> 失败。</li><li>因为 <code>python -m B.py</code> 失败，所以跳过 <code>python /tmp/B.py</code>。</li></ol><h3 id="YAML-配置"><a href="#YAML-配置" class="headerlink" title="YAML 配置"></a>YAML 配置</h3><p>将这些命令放入 Kubernetes Pod 配置中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">my-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">my-container</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">python:3.9</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;python -m A.py &amp;&amp; python /tmp/A.py ; python -m B.py &amp;&amp; python /tmp/B.py&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在这个配置中，命令的执行顺序和出错处理如下：</p><ol><li><code>python -m A.py</code> 成功 -&gt; 执行 <code>python /tmp/A.py</code>。</li><li><code>python -m A.py</code> 失败 -&gt; 跳过 <code>python /tmp/A.py</code>。</li><li>无论上一步成功或失败，继续执行 <code>python -m B.py</code>。</li><li><code>python -m B.py</code> 成功 -&gt; 执行 <code>python /tmp/B.py</code>。</li><li><code>python -m B.py</code> 失败 -&gt; 跳过 <code>python /tmp/B.py</code>。</li></ol><p>这种方式确保了每对命令都按照预期顺序执行，并且即使某些命令失败，后续命令仍会继续执行。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>shell-test-tcp-port</title>
      <link href="/2024/09/20/shell-test-tcp-port/"/>
      <url>/2024/09/20/shell-test-tcp-port/</url>
      
        <content type="html"><![CDATA[<h1 id="测试-TCP-端口-3306-是否开放"><a href="#测试-TCP-端口-3306-是否开放" class="headerlink" title="测试 TCP 端口 3306 是否开放"></a>测试 TCP 端口 3306 是否开放</h1><p>要测试 3306 端口的连通性，可以使用多种 Linux 命令工具，如 <code>telnet</code>、<code>nc</code>（netcat）或 <code>nmap</code>。以下是几种常用的方法：</p><h3 id="使用-telnet"><a href="#使用-telnet" class="headerlink" title="使用 telnet"></a>使用 <code>telnet</code></h3><p><code>telnet</code> 是一个简单的命令行工具，可以用于测试指定主机和端口的连通性。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet &lt;目标IP&gt; 3306</span><br></pre></td></tr></table></figure><p>如果连接成功，会显示类似于 <code>Connected to &lt;目标IP&gt;</code> 的消息。如果连接失败，会显示 <code>Unable to connect to remote host</code>。</p><h3 id="使用-nc（netcat）"><a href="#使用-nc（netcat）" class="headerlink" title="使用 nc（netcat）"></a>使用 <code>nc</code>（netcat）</h3><p><code>nc</code> 是一个更强大的网络工具，可以用于测试端口连通性。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -zv &lt;目标IP&gt; 3306</span><br></pre></td></tr></table></figure><ul><li><code>-z</code> 选项表示扫描端口而不发送数据。</li><li><code>-v</code> 选项表示显示详细信息。</li></ul><p>如果连接成功，会显示 <code>succeeded</code>，否则会显示 <code>failed</code>。</p><h3 id="使用-nmap"><a href="#使用-nmap" class="headerlink" title="使用 nmap"></a>使用 <code>nmap</code></h3><p><code>nmap</code> 是一个网络扫描工具，可以用于检查端口的开放状态。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 3306 &lt;目标IP&gt;</span><br></pre></td></tr></table></figure><p>这将扫描目标主机的 3306 端口，并显示端口的状态（open&#x2F;closed&#x2F;filtered）。</p><h3 id="使用-curl"><a href="#使用-curl" class="headerlink" title="使用 curl"></a>使用 <code>curl</code></h3><p>如果你想测试 MySQL 服务是否在运行，可以使用 <code>curl</code> 发送一个简单的 HTTP 请求（假设 MySQL 服务配置了 HTTP 接口）。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://&lt;目标IP&gt;:3306</span><br></pre></td></tr></table></figure><p>这通常不会成功，因为 MySQL 默认不提供 HTTP 接口，但它可以用于测试是否有任何响应。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>假设目标 IP 是 <code>192.168.1.100</code>，可以使用以下命令：</p><h4 id="使用-telnet-1"><a href="#使用-telnet-1" class="headerlink" title="使用 telnet"></a>使用 <code>telnet</code></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.1.100 3306</span><br></pre></td></tr></table></figure><h4 id="使用-nc"><a href="#使用-nc" class="headerlink" title="使用 nc"></a>使用 <code>nc</code></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -zv 192.168.1.100 3306</span><br></pre></td></tr></table></figure><h4 id="使用-nmap-1"><a href="#使用-nmap-1" class="headerlink" title="使用 nmap"></a>使用 <code>nmap</code></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 3306 192.168.1.100</span><br></pre></td></tr></table></figure><p>选择适合你的工具和方法来测试 3306 端口的连通性。如果你没有安装这些工具，可以使用包管理器进行安装，例如 <code>apt-get</code>、<code>yum</code> 或 <code>brew</code>。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>helm-can-not-find-release</title>
      <link href="/2024/09/20/helm-can-not-find-release/"/>
      <url>/2024/09/20/helm-can-not-find-release/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><blockquote><p>为什么在 helm list 看不到 foobar ，但是部署 helm 时候 An error occurred: Unable to create the installed package for the package “jupyterhub&#x2F;jupyterhub” using the plugin “helm.packages”: internal: Unable to create helm release “foobar” in the namespace “jupyter”: release datacenter already exists.</p></blockquote><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>在使用 Helm 部署应用时遇到这种情况，通常是因为 Helm 认为某个 release 已经存在，但该 release 并没有在 <code>helm list</code> 中显示。这种情况可能由多种原因引起。以下是一些可能的原因及相应的解决方法：</p><ol><li><p><strong>Release 已经存在但状态异常</strong>：</p><ul><li>可能该 release 处于失败状态或部分删除状态，导致 Helm 认为它仍然存在。</li><li>你可以尝试使用以下命令查看所有 release，包括失败的：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm list --all-namespaces --all</span><br></pre></td></tr></table></figure></li><li>如果找到了对应的 release，可以选择删除它：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm delete &lt;release-name&gt; --namespace &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Helm release 信息未正确清理</strong>：</p><ul><li>有时候 Helm 的 release 信息在 Kubernetes 集群中没有被正确清理。</li><li>你可以手动删除对应的 ConfigMap 或 Secret（根据 Helm 版本不同，可能存储在 ConfigMap 或 Secret 中）：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get configmap -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete configmap &lt;configmap-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure>或者：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secret -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete secret &lt;secret-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Helm 版本问题</strong>：</p><ul><li>确保 Helm 客户端和服务器端（Tiller，Helm 2 中使用）版本兼容。</li><li>尝试升级到最新版本的 Helm。</li></ul></li><li><p><strong>命名空间问题</strong>：</p><ul><li>确保你在正确的命名空间中操作。使用 <code>-n &lt;namespace&gt;</code> 指定命名空间。</li><li>例如：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm list -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Helm release 名称冲突</strong>：</p><ul><li>确保没有其他 Helm release 使用相同的名称。在不同的命名空间中也可能会有名称冲突。</li></ul></li><li><p><strong>Helm release 数据库损坏</strong>：</p><ul><li>如果 Helm release 数据库损坏，可能需要修复或重建数据库。</li><li>可以尝试 Helm 的 <code>--force</code> 选项重新部署：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm upgrade --install --force &lt;release-name&gt; &lt;chart&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>总结起来，你可以按照以下步骤进行排查和解决：</p><ol><li><p>查看所有 release，包括失败的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm list --all-namespaces --all</span><br></pre></td></tr></table></figure></li><li><p>如果找到了对应的 release，删除它：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm delete &lt;release-name&gt; --namespace &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果仍然存在问题，手动删除对应的 ConfigMap 或 Secret：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get configmap -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete configmap &lt;configmap-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get secret -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete secret &lt;secret-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li><li><p>确保 Helm 客户端和服务器端版本兼容，并且在正确的命名空间中操作。</p></li></ol><p>通过以上步骤，你应该能够解决 Helm release 已经存在但在 <code>helm list</code> 中看不到的问题。</p><h1 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h1><blockquote><p>刚才的问题查找到状态是 pending-upgrade，如何解决？</p></blockquote><h1 id="解决方法2"><a href="#解决方法2" class="headerlink" title="解决方法2"></a>解决方法2</h1><p>当 Helm release 处于 <code>pending-upgrade</code> 状态时，通常意味着上一次升级操作未能成功完成，导致 release 处于一种未决状态。要解决这个问题，可以尝试以下步骤：</p><ol><li><p><strong>检查 Helm release 状态</strong>：</p><ul><li>使用以下命令查看 release 的详细状态：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm status &lt;release-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>强制升级或回滚</strong>：</p><ul><li>如果 release 卡在 <code>pending-upgrade</code> 状态，可以尝试强制升级或回滚到之前的版本。</li><li>强制升级：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm upgrade --install --force &lt;release-name&gt; &lt;chart&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li><li>回滚到之前的版本（假设之前的版本是 1）：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm rollback &lt;release-name&gt; 1 -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>删除并重新部署</strong>：</p><ul><li>如果强制升级或回滚未能解决问题，可以尝试删除该 release 并重新部署。</li><li>删除 release：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm delete &lt;release-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li><li>确保 release 相关的资源（如 ConfigMap 或 Secret）已被完全删除：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get configmap -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete configmap &lt;configmap-name&gt; -n &lt;namespace&gt;</span><br><span class="line">kubectl get secret -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete secret &lt;secret-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li><li>重新部署：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helm install &lt;release-name&gt; &lt;chart&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>清理 Helm release 信息</strong>：</p><ul><li>有时需要手动清理 Helm release 信息，尤其是当 release 处于未决状态时。</li><li>手动删除 release 相关的 ConfigMap 或 Secret：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl get configmap -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete configmap &lt;configmap-name&gt; -n &lt;namespace&gt;</span><br><span class="line">kubectl get secret -n &lt;namespace&gt; | grep &lt;release-name&gt;</span><br><span class="line">kubectl delete secret &lt;secret-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>检查 Kubernetes 资源状态</strong>：</p><ul><li>有时 Kubernetes 资源本身可能处于未决状态，这也可能导致 Helm release 卡住。</li><li>使用以下命令检查相关资源的状态：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n &lt;namespace&gt;</span><br><span class="line">kubectl describe pod &lt;pod-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>通过以上步骤，你应该能够解决 Helm release 处于 <code>pending-upgrade</code> 状态的问题。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jupyterhub-profilelist-custom</title>
      <link href="/2024/09/20/jupyterhub-profilelist-custom/"/>
      <url>/2024/09/20/jupyterhub-profilelist-custom/</url>
      
        <content type="html"><![CDATA[<h1 id="jupyter-hub-集群版（k8s）如何配置启动配置选择，比如可以选择-4G-内存和-8G-内存以及不同-nodeSelector-标签的"><a href="#jupyter-hub-集群版（k8s）如何配置启动配置选择，比如可以选择-4G-内存和-8G-内存以及不同-nodeSelector-标签的" class="headerlink" title="jupyter hub 集群版（k8s）如何配置启动配置选择，比如可以选择 4G 内存和 8G 内存以及不同 nodeSelector 标签的"></a>jupyter hub 集群版（k8s）如何配置启动配置选择，比如可以选择 4G 内存和 8G 内存以及不同 nodeSelector 标签的</h1><p>在 Kubernetes 上部署 JupyterHub 集群版时，你可以通过配置 JupyterHub 的 Helm chart 来实现启动配置选择，包括内存大小和不同的 <code>nodeSelector</code> 标签。以下是一个示例步骤，展示如何实现这些配置：</p><ol><li><p><strong>安装 Helm（如果尚未安装）</strong>:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash</span><br></pre></td></tr></table></figure></li><li><p><strong>添加 JupyterHub Helm 仓库</strong>:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/</span><br><span class="line">helm repo update</span><br></pre></td></tr></table></figure></li><li><p><strong>创建一个自定义的 <code>config.yaml</code> 文件</strong>，用于配置 JupyterHub 的 Helm chart：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hub:</span></span><br><span class="line">  <span class="attr">extraConfig:</span></span><br><span class="line">    <span class="attr">customConfig:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      c.KubeSpawner.profile_list = [</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">              &#x27;display_name&#x27;: &#x27;4G Memory&#x27;,</span></span><br><span class="line"><span class="string">              &#x27;description&#x27;: &#x27;Single user notebook with 4G memory&#x27;,</span></span><br><span class="line"><span class="string">              &#x27;kubespawner_override&#x27;: &#123;</span></span><br><span class="line"><span class="string">                  &#x27;cpu_limit&#x27;: 1,</span></span><br><span class="line"><span class="string">                  &#x27;mem_limit&#x27;: &#x27;4G&#x27;,</span></span><br><span class="line"><span class="string">                  &#x27;node_selector&#x27;: &#123;</span></span><br><span class="line"><span class="string">                      &#x27;disktype&#x27;: &#x27;ssd&#x27;</span></span><br><span class="line"><span class="string">                  &#125;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">              &#x27;display_name&#x27;: &#x27;8G Memory&#x27;,</span></span><br><span class="line"><span class="string">              &#x27;description&#x27;: &#x27;Single user notebook with 8G memory&#x27;,</span></span><br><span class="line"><span class="string">              &#x27;kubespawner_override&#x27;: &#123;</span></span><br><span class="line"><span class="string">                  &#x27;cpu_limit&#x27;: 2,</span></span><br><span class="line"><span class="string">                  &#x27;mem_limit&#x27;: &#x27;8G&#x27;,</span></span><br><span class="line"><span class="string">                  &#x27;node_selector&#x27;: &#123;</span></span><br><span class="line"><span class="string">                      &#x27;disktype&#x27;: &#x27;hdd&#x27;</span></span><br><span class="line"><span class="string">                  &#125;</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">      ]</span></span><br></pre></td></tr></table></figure></li><li><p><strong>安装 JupyterHub</strong>:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">RELEASE=jhub</span><br><span class="line">NAMESPACE=jhub</span><br><span class="line"></span><br><span class="line">helm upgrade --install <span class="variable">$RELEASE</span> jupyterhub/jupyterhub \</span><br><span class="line">    --namespace <span class="variable">$NAMESPACE</span> \</span><br><span class="line">    --create-namespace \</span><br><span class="line">    --version=1.2.0 \</span><br><span class="line">    --values config.yaml</span><br></pre></td></tr></table></figure></li></ol><p>在上面的配置中，我们定义了两个不同的配置选项：</p><ul><li><p><strong>4G Memory</strong>:</p><ul><li><code>cpu_limit</code>: 1</li><li><code>mem_limit</code>: 4G</li><li><code>node_selector</code>: <code>disktype=ssd</code></li></ul></li><li><p><strong>8G Memory</strong>:</p><ul><li><code>cpu_limit</code>: 2</li><li><code>mem_limit</code>: 8G</li><li><code>node_selector</code>: <code>disktype=hdd</code></li></ul></li></ul><p>这些配置将出现在 JupyterHub 的用户界面中，用户可以在启动他们的 Jupyter Notebook 实例时选择相应的配置。</p><h3 id="详细解释"><a href="#详细解释" class="headerlink" title="详细解释"></a>详细解释</h3><ul><li><strong><code>c.KubeSpawner.profile_list</code></strong>: 这是一个列表，包含了多个配置文件，每个配置文件代表一种资源配置选项。</li><li><strong><code>display_name</code></strong>: 在 JupyterHub UI 中显示的配置名称。</li><li><strong><code>description</code></strong>: 配置选项的描述。</li><li><strong><code>kubespawner_override</code></strong>: 用于覆盖默认的 KubeSpawner 配置，包括 CPU 和内存限制、节点选择器等。</li></ul><h3 id="其他配置项"><a href="#其他配置项" class="headerlink" title="其他配置项"></a>其他配置项</h3><p>除了上述基本配置，你还可以根据需要添加更多的配置选项，例如：</p><ul><li><strong><code>cpu_guarantee</code></strong> 和 **<code>mem_guarantee</code>**：保证的 CPU 和内存资源。</li><li>**<code>tolerations</code>**：为 Pod 指定容忍度，以便它们可以调度到特定的节点上。</li><li>**<code>affinity</code>**：用于指定 Pod 的亲和性规则。</li></ul><p>通过这种方式，你可以灵活地管理和分配集群资源，以满足不同用户的需求。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://jupyterhub.github.io/helm-chart/">JupyterHub Helm Chart</a></li><li><a href="https://z2jh.jupyter.org/en/latest/resources/reference.html">https://z2jh.jupyter.org/en/latest/resources/reference.html</a></li><li><a href="https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html#kubespawner.KubeSpawner.profile_list">https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html#kubespawner.KubeSpawner.profile_list</a></li><li><a href="https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html#kubespawner.KubeSpawner.mem_limit">https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html#kubespawner.KubeSpawner.mem_limit</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eks-no-nodes-fix</title>
      <link href="/2024/09/18/eks-no-nodes-fix/"/>
      <url>/2024/09/18/eks-no-nodes-fix/</url>
      
        <content type="html"><![CDATA[<h1 id="EKS-Nodes-not-showing-EKS"><a href="#EKS-Nodes-not-showing-EKS" class="headerlink" title="EKS Nodes not showing EKS"></a>EKS Nodes not showing EKS</h1><p>EKS 使用管理源无法看到节点机器，这个问题需要配置 aws-auth ConfigMap 来解决。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">mapRoles:</span></span><br><span class="line"><span class="string">----</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:nodes</span></span><br><span class="line">  <span class="attr">rolearn:</span> <span class="string">arn:aws:iam::111122223333:role/my-node-role</span></span><br></pre></td></tr></table></figure><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ul><li><p><a href="https://repost.aws/questions/QUwwHQCZgxQH2pNRDVZYsKWQ/eks-nodes-not-showing">https://repost.aws/questions/QUwwHQCZgxQH2pNRDVZYsKWQ/eks-nodes-not-showing</a></p></li><li><p><a href="https://docs.aws.amazon.com/eks/latest/userguide/auth-configmap.html">https://docs.aws.amazon.com/eks/latest/userguide/auth-configmap.html</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JupyterHub Authentik Login</title>
      <link href="/2024/05/31/jupyterhub-authentik-login/"/>
      <url>/2024/05/31/jupyterhub-authentik-login/</url>
      
        <content type="html"><![CDATA[<p><a href="https://z2jh.jupyter.org/en/stable/administrator/authentication.html#genericoauthenticator-openid-connect">参考文档</a> 以及一些<a href="https://oauthenticator.readthedocs.io/en/stable/reference/api/gen/oauthenticator.oauth2.html">配置</a></p><p>下面之前的 LDAP 和 启用的新的 OAuth 配置，可以参考一下：</p><p>注意 allow_all 为 true，表示允许所有用户登录</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hub:</span></span><br><span class="line">  <span class="attr">activeServerLimit:</span></span><br><span class="line">  <span class="attr">allowNamedServers:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">args:</span> []</span><br><span class="line">  <span class="attr">authenticatePrometheus:</span></span><br><span class="line">  <span class="attr">baseUrl:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">  <span class="attr">command:</span> []</span><br><span class="line">  <span class="attr">concurrentSpawnLimit:</span> <span class="number">64</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">Authenticator:</span></span><br><span class="line">      <span class="attr">admin_users:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;admin&quot;</span></span><br><span class="line">      <span class="attr">allow_all:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">auto_login:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">GenericOAuthenticator:</span></span><br><span class="line">      <span class="attr">authorize_url:</span> <span class="string">&quot;https://authentik.example.com/application/o/authorize/&quot;</span></span><br><span class="line">      <span class="attr">client_id:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">client_secret:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">login_service:</span> <span class="string">&quot;OAuth&quot;</span></span><br><span class="line">      <span class="attr">oauth_callback_url:</span> <span class="string">&quot;https://jupyter.example.com/hub/oauth_callback&quot;</span></span><br><span class="line">      <span class="attr">scope:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;openid&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;email&quot;</span></span><br><span class="line">      <span class="attr">token_url:</span> <span class="string">&quot;https://authentik.example.com/application/o/token/&quot;</span></span><br><span class="line">      <span class="attr">userdata_url:</span> <span class="string">&quot;https://authentik.example.com/application/o/userinfo/&quot;</span></span><br><span class="line">      <span class="attr">username_claim:</span> <span class="string">&quot;sub&quot;</span></span><br><span class="line">    <span class="attr">JupyterHub:</span></span><br><span class="line">      <span class="attr">admin_access:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">authenticator_class:</span> <span class="string">&quot;generic-oauth&quot;</span></span><br><span class="line">    <span class="attr">LDAPAuthenticator:</span></span><br><span class="line">      <span class="attr">allowed_groups:</span> []</span><br><span class="line">      <span class="attr">bind_dn_template:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;uid=&#123;username&#125;,ou=foo,ou=People,dc=example,dc=com&quot;</span></span><br><span class="line">      <span class="attr">escape_userdn:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">lookup_dn:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">server_address:</span> <span class="string">&quot;ldap.example.com&quot;</span></span><br><span class="line">      <span class="attr">use_ssl:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> authentik </tag>
            
            <tag> login </tag>
            
            <tag> jupyterhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Grafana Authentik Login</title>
      <link href="/2024/05/31/grafana-authentik-login/"/>
      <url>/2024/05/31/grafana-authentik-login/</url>
      
        <content type="html"><![CDATA[<p>Grafana 支持多种登录方式，包括 LDAP, OAuth 等。本文介绍如何配置 Authentik 登录。</p><p><a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/">参考1</a><br><a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/generic-oauth/">参考2</a></p><h1 id="配置-LDAP-登录"><a href="#配置-LDAP-登录" class="headerlink" title="配置 LDAP 登录"></a>配置 LDAP 登录</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">grafana:</span></span><br><span class="line">  <span class="attr">ldap:</span></span><br><span class="line">    <span class="attr">config:</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">      verbose_logging = true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      [[servers]]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      host=&quot;</span><span class="string">ldap.example.com&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">port=389</span></span><br><span class="line"></span><br><span class="line">      <span class="string">use_ssl=false</span></span><br><span class="line"></span><br><span class="line">      <span class="string">start_tls=false</span></span><br><span class="line"></span><br><span class="line">      <span class="string">ssl_skip_verify=true</span></span><br><span class="line"></span><br><span class="line">      <span class="string">bind_dn=&quot;cn=admin,dc=example,dc=com&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">bind_password=&quot;examplePassword&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">search_filter</span> <span class="string">=</span> <span class="string">&quot;(uid=%s)&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">search_base_dns</span> <span class="string">=</span> [<span class="string">&quot;ou=foo,dc=example,dc=com&quot;</span>]</span><br><span class="line"></span><br><span class="line">      <span class="string">group_search_filter</span> <span class="string">=</span> <span class="string">&quot;(objectClass=groupOfUniqueNames)&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">group_search_base_dns</span> <span class="string">=</span> [<span class="string">&quot;ou=Group,dc=example,dc=com&quot;</span>]</span><br><span class="line"></span><br><span class="line">      <span class="string">group_search_filter_user_attribute</span> <span class="string">=</span> <span class="string">&quot;uid&quot;</span></span><br><span class="line"></span><br><span class="line">      [<span class="string">servers.attributes</span>]</span><br><span class="line"></span><br><span class="line">      <span class="string">name</span> <span class="string">=</span> <span class="string">&quot;cn&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">surname</span> <span class="string">=</span> <span class="string">&quot;sn&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">username</span> <span class="string">=</span> <span class="string">&quot;uid&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">member_of</span> <span class="string">=</span> <span class="string">&quot;memberOf&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">email</span> <span class="string">=</span>  <span class="string">&quot;mail&quot;</span></span><br><span class="line"></span><br><span class="line">      [[<span class="string">servers.group_mappings</span>]]</span><br><span class="line"></span><br><span class="line">      <span class="string">group_dn</span> <span class="string">=</span> <span class="string">&quot;cn=g-admin,ou=Group,dc=example,dc=com&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="string">org_role</span> <span class="string">=</span> <span class="string">&quot;Editor&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    enabled: true</span></span><br></pre></td></tr></table></figure><h1 id="配置-Authentik-登录"><a href="#配置-Authentik-登录" class="headerlink" title="配置 Authentik 登录"></a>配置 Authentik 登录</h1><p><code>grafana.ini</code> 配置如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">grafana:</span></span><br><span class="line">  <span class="attr">grafana.ini:</span></span><br><span class="line">    <span class="attr">auth:</span></span><br><span class="line">      <span class="attr">oauth_allow_insecure_email_lookup:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">auth.generic_oauth:</span></span><br><span class="line">      <span class="attr">allow_assign_grafana_admin:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">allow_sign_up:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">allowed_organizations:</span></span><br><span class="line">      <span class="attr">api_url:</span> <span class="string">&quot;https://authentik.example.com/application/o/userinfo/&quot;</span></span><br><span class="line">      <span class="attr">auth_url:</span> <span class="string">&quot;https://authentik.example.com/application/o/authorize/&quot;</span></span><br><span class="line">      <span class="attr">auto_login:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">client_id:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">client_secret:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">&quot;OAuth&quot;</span></span><br><span class="line">      <span class="attr">scopes:</span> <span class="string">&quot;openid email profile offline_access&quot;</span></span><br><span class="line">      <span class="attr">skip_org_role_sync:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">team_ids:</span></span><br><span class="line">      <span class="attr">token_url:</span> <span class="string">&quot;https://authentik.example.com/application/o/token/&quot;</span></span><br><span class="line">      <span class="attr">use_pkce:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">use_refresh_token:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">auth.ldap:</span></span><br><span class="line">      <span class="attr">allow_sign_up:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">config_file:</span> <span class="string">&quot;/etc/grafana/ldap.toml&quot;</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">server:</span></span><br><span class="line">      <span class="attr">root_url:</span> <span class="string">&quot;https://grafana.example.com/&quot;</span></span><br></pre></td></tr></table></figure><h2 id="注意几点："><a href="#注意几点：" class="headerlink" title="注意几点："></a>注意几点：</h2><ol><li>root_url: “<a href="https://grafana.example.com/">https://grafana.example.com/</a>“, 需要配置为你的域名, 不然会出现跳转错误, <a href="https://github.com/goauthentik/authentik/issues/8673">issue</a>, <a href="https://community.grafana.com/t/redirect-uri-mismatch-error-in-google-oauth/35659/5">解决方案</a></li><li>oauth_allow_insecure_email_lookup: true, 允许不安全的邮箱查找, 由于我是通过 email 匹配的，所以需要设置为 true</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> authentik </tag>
            
            <tag> login </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Airflow Authentik Login</title>
      <link href="/2024/05/31/airflow-authentik-login/"/>
      <url>/2024/05/31/airflow-authentik-login/</url>
      
        <content type="html"><![CDATA[<p>Airflow Helm Chart</p><p><code>App Version: 2.8.3</code></p><p><code>Package Version: 1.13.1</code></p><p>这里有一个 github 上的<a href="https://github.com/airflow-helm/charts/blob/main/charts/airflow/docs/faq/security/ldap-oauth.md">参考</a></p><p>配置 <code>webserver_config.py</code> 如下</p><h1 id="Airflow-LDAP-login"><a href="#Airflow-LDAP-login" class="headerlink" title="Airflow LDAP login"></a>Airflow LDAP login</h1><p>可以参考<a href="https://airflow.apache.org/docs/apache-airflow/1.10.13/security.html#ldap">文档</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_appbuilder.security.manager <span class="keyword">import</span> AUTH_LDAP</span><br><span class="line"></span><br><span class="line">AUTH_TYPE = AUTH_LDAP</span><br><span class="line"></span><br><span class="line">AUTH_LDAP_SERVER = <span class="string">&quot;ldap://ldap.example.com&quot;</span></span><br><span class="line"></span><br><span class="line">AUTH_LDAP_USE_TLS = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># registration configs</span></span><br><span class="line"></span><br><span class="line">AUTH_USER_REGISTRATION = <span class="literal">True</span>  <span class="comment"># allow users who are not already in the FAB DB</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Required if not mapping from LDAP DN</span></span><br><span class="line"></span><br><span class="line">AUTH_USER_REGISTRATION_ROLE = <span class="string">&quot;Admin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># AUTH_LDAP_FIRSTNAME_FIELD = &quot;uid&quot;</span></span><br><span class="line"></span><br><span class="line">AUTH_LDAP_LASTNAME_FIELD = <span class="string">&quot;cn&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if null in LDAP, email is set to: &quot;&#123;username&#125;@email.notfound&quot;</span></span><br><span class="line">AUTH_LDAP_EMAIL_FIELD = <span class="string">&quot;mail&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># search configs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the LDAP search base</span></span><br><span class="line">AUTH_LDAP_SEARCH = <span class="string">&quot;ou=foo,ou=People,dc=example,dc=com&quot;</span></span><br><span class="line"></span><br><span class="line">AUTH_LDAP_UID_FIELD = <span class="string">&quot;uid&quot;</span>  <span class="comment"># the username field</span></span><br><span class="line"></span><br><span class="line">AUTH_LDAP_BIND_USER = <span class="string">&quot;cn=admin,dc=example,dc=com&quot;</span></span><br><span class="line"></span><br><span class="line">AUTH_LDAP_BIND_PASSWORD = <span class="string">&quot;adminPassword&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># a mapping from LDAP DN to a list of FAB roles</span></span><br><span class="line"></span><br><span class="line">AUTH_ROLES_MAPPING = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;cn=g-admin,ou=Group,dc=example,dc=com&quot;</span>: [<span class="string">&quot;Admin&quot;</span>],</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the LDAP user attribute which has their role DNs</span></span><br><span class="line"></span><br><span class="line">AUTH_LDAP_GROUP_FIELD = <span class="string">&quot;memberOf&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># if we should replace ALL the user&#x27;s roles each login, or only on registration</span></span><br><span class="line"></span><br><span class="line">AUTH_ROLES_SYNC_AT_LOGIN = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># force users to re-auth after 30min of inactivity (to keep roles in sync)</span></span><br><span class="line"></span><br><span class="line">PERMANENT_SESSION_LIFETIME = <span class="number">86400</span></span><br></pre></td></tr></table></figure><h1 id="Airflow-OAuth-login"><a href="#Airflow-OAuth-login" class="headerlink" title="Airflow OAuth login"></a>Airflow OAuth login</h1><p>参考 <a href="https://airflow.apache.org/docs/apache-airflow/2.8.3/security/webserver.html">文档</a></p><p>具体 <a href="https://airflow.apache.org/docs/apache-airflow-providers-fab/1.1.1/auth-manager/webserver-authentication.html">参见</a></p><h2 id="Authentik-认证"><a href="#Authentik-认证" class="headerlink" title="Authentik 认证"></a>Authentik 认证</h2><p>有趣的是 Airflow 对于集成 Authentik，有人提供了一个 <a href="https://github.com/apache/airflow/issues/35131">PR</a>, 但这个过于复杂，代码可以<a href="https://github.com/apache/airflow/blob/b8a83b2293f16523b40fab6035fed5f5431076af/airflow/providers/fab/auth_manager/security_manager/override.py#L2268">参考</a>或是<a href="https://github.com/dpgaspar/Flask-AppBuilder/blob/master/flask_appbuilder/security/manager.py#L701">参考</a></p><p>我采用了一个简单的方式，通过 OAuth 认证，问题的关键点是在于 userinfo&#x2F; 而不是 userinfo , 否则会出现如下错误：</p><p><code>ERROR - OAUTH userinfo does not have username or email &#123;&#125;</code></p><p>具体配置如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_appbuilder.security.manager <span class="keyword">import</span> AUTH_OAUTH</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> airflow.auth.managers.fab.security_manager.override <span class="keyword">import</span></span><br><span class="line">FabAirflowSecurityManagerOverride</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AUTH_TYPE = AUTH_OAUTH</span><br><span class="line"></span><br><span class="line">AUTH_USER_REGISTRATION = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">AUTH_USER_REGISTRATION_ROLE = <span class="string">&quot;User&quot;</span></span><br><span class="line"></span><br><span class="line">OAUTH_PROVIDERS = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;OAuth&quot;</span>,</span><br><span class="line">        <span class="string">&quot;icon&quot;</span>: <span class="string">&quot;fa-circle-o&quot;</span>,</span><br><span class="line">        <span class="string">&quot;token_key&quot;</span>: <span class="string">&quot;access_token&quot;</span>,</span><br><span class="line">        <span class="string">&quot;remote_app&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;client_id&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="string">&quot;api_base_url&quot;</span>: <span class="string">&quot;https://authentik.example.com/application/o/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;client_secret&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;client_kwargs&quot;</span>: &#123;<span class="string">&quot;scope&quot;</span>: <span class="string">&quot;openid email profile&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;server_metadata_url&quot;</span>: <span class="string">&quot;https://authentik.exmpale.com/application/o/oauth/.well-known/openid-configuration&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">PERMANENT_SESSION_LIFETIME = <span class="number">259200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomSecurityManager</span>(<span class="title class_ inherited__">FabAirflowSecurityManagerOverride</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_oauth_user_info</span>(<span class="params">self, provider, resp</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> provider != <span class="string">&quot;OAuth&quot;</span>:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Be careful with the URL here, it must be userinfo/ and not user_info</span></span><br><span class="line">        me = self.appbuilder.sm.oauth_remotes[provider].get(<span class="string">&quot;userinfo/&quot;</span>)</span><br><span class="line"></span><br><span class="line">        data = me.json()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;data: <span class="subst">&#123;data&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&quot;email&quot;</span>: data[<span class="string">&quot;email&quot;</span>],</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: data.get(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            <span class="string">&quot;first_name&quot;</span>: data.get(<span class="string">&quot;given_name&quot;</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">            <span class="string">&quot;role_keys&quot;</span>: data.get(<span class="string">&quot;groups&quot;</span>, []),</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SECURITY_MANAGER_CLASS = CustomSecurityManager</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Debug-方式"><a href="#Debug-方式" class="headerlink" title="Debug 方式"></a>Debug 方式</h2><p>遗留的一些调试代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">remote_app = self.appbuilder.sm.oauth_remotes[provider]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;remote_app: <span class="subst">&#123;remote_app&#125;</span>, vars: <span class="subst">&#123;<span class="built_in">vars</span>(remote_app)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    id_token = resp[<span class="string">&quot;id_token&quot;</span>]</span><br><span class="line">    me = self._get_dingtalk_token_info(id_token)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;me: <span class="subst">&#123;me&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    me = remote_app.get(<span class="string">&quot;userinfo&quot;</span>)</span><br><span class="line">    <span class="comment"># print get source code</span></span><br><span class="line">    <span class="keyword">import</span> inspect</span><br><span class="line">    <span class="built_in">print</span>(inspect.getsource(remote_app.get))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;me: <span class="subst">&#123;me&#125;</span>, vars: <span class="subst">&#123;<span class="built_in">vars</span>(me)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    user_data = me.json()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error getting user info: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;sys.exc_info()&#125;</span>&quot;</span>)</span><br><span class="line">    traceback.print_exc()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;user_data: <span class="subst">&#123;user_data&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="Airflow-API-Auth"><a href="#Airflow-API-Auth" class="headerlink" title="Airflow API Auth"></a>Airflow API Auth</h1><p>API 认证可以通过配置文件进行配置，具体 <a href="https://airflow.apache.org/docs/apache-airflow/2.8.3/security/api.html">参见</a></p><p>可以通过帐号密码进行认证，不同于 OAuth 认证, 具体配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">config:</span></span><br><span class="line">  <span class="attr">api:</span></span><br><span class="line">    <span class="attr">auth_backends:</span> <span class="string">&quot;airflow.api.auth.backend.basic_auth&quot;</span></span><br></pre></td></tr></table></figure><h2 id="重置密码"><a href="#重置密码" class="headerlink" title="重置密码"></a>重置密码</h2><p><a href="https://github.com/apache/airflow/issues/37009">参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> airflow </tag>
            
            <tag> authentik </tag>
            
            <tag> login </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentry K8s Deployment</title>
      <link href="/2024/05/31/sentry-k8s-deployment/"/>
      <url>/2024/05/31/sentry-k8s-deployment/</url>
      
        <content type="html"><![CDATA[<h1 id="Sentry-K8s-Deployment"><a href="#Sentry-K8s-Deployment" class="headerlink" title="Sentry K8s Deployment"></a>Sentry K8s Deployment</h1><p>Sentry 是一个开源的错误监控系统，可以用来监控应用程序的错误。本文介绍如何在 Kubernetes 集群中部署 Sentry。</p><p>官方没有提供 Sentry 的 Kubernetes 部署文档，但是 <a href="https://github.com/sentry-kubernetes/charts">https://github.com/sentry-kubernetes/charts</a> 提供了 Sentry 的 Helm Chart，可以方便地在 Kubernetes 集群中部署 Sentry。</p><h2 id="关键配置-values-yaml"><a href="#关键配置-values-yaml" class="headerlink" title="关键配置 values.yaml"></a>关键配置 values.yaml</h2><p>App Version: 24.5.0<br>Package Version: 23.1.0</p><p><code>values.yaml</code> 配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">filestore:</span></span><br><span class="line">  <span class="attr">backend:</span> <span class="string">filesystem</span></span><br><span class="line">  <span class="attr">filesystem:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/var/lib/sentry/files</span></span><br><span class="line">    <span class="attr">persistence:</span></span><br><span class="line">      <span class="attr">accessMode:</span> <span class="string">ReadWriteMany</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">existingClaim:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">persistentWorkers:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">size:</span> <span class="string">10Gi</span></span><br><span class="line">      <span class="attr">storageClass:</span> <span class="string">&quot;efs&quot;</span></span><br><span class="line"><span class="attr">nginx:</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="attr">annotations:</span> &#123; &#125;</span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">sentry.company.com</span></span><br><span class="line">    <span class="attr">ingressClassName:</span> <span class="string">&quot;alb&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line"><span class="attr">postgresql:</span></span><br><span class="line">  <span class="attr">postgresqlPassword:</span> <span class="string">&quot;examplePassword&quot;</span></span><br><span class="line">  <span class="attr">postgresqlPostgresPassword:</span> <span class="string">&quot;examplePassword&quot;</span></span><br><span class="line"><span class="attr">sourcemaps:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">create:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">email:</span> <span class="string">example@company.com</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">examplePassword</span></span><br><span class="line"><span class="attr">zookeeper:</span></span><br><span class="line">  <span class="attr">autopurge:</span></span><br><span class="line">    <span class="attr">purgeInterval:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">snapRetainCount:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="注意几点："><a href="#注意几点：" class="headerlink" title="注意几点："></a>注意几点：</h3><ol><li><a href="https://github.com/sentry-kubernetes/charts?tab=readme-ov-file#persistence">filestore</a> , 需要配置 storageClass 为 ReadWriteMany 的存储类。</li><li><code>nginx</code> 配置 annotation, 因为我们使用的是 AWS 的 ALB Ingress Controller。</li><li><code>postgresql</code> 配置数据库密码， 防止启动时报错。<a href="https://github.com/sentry-kubernetes/charts/issues/571#issuecomment-1039616281">具体参见</a>, <a href="https://github.com/sentry-kubernetes/charts/issues/799">清理方式</a></li><li><code>sourcemaps</code> 配置为 true，开启 sourcemaps 功能。</li><li><code>user</code> 配置为 true，创建一个初始用户(admin)。</li><li><code>zookeeper</code> 配置 autopurge, 避免 Zookeeper 数据过大。</li></ol><h3 id="重点注意："><a href="#重点注意：" class="headerlink" title="重点注意："></a>重点注意：</h3><p>部署成功后，会出现一个 <code>sentry-clickhouse</code> 的 pod，但是会一直处于 <code>CrashLoopBackOff</code> 状态</p><p>查看日志，发现如下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">snuba.clickhouse.errors.ClickhouseWriterError: Method write is not supported by storage Distributed with more than one shard and no sharding key provided</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>具体原因和解决方案 <a href="https://github.com/getsentry/snuba/issues/4897">参见</a> 以及 <a href="https://github.com/sentry-kubernetes/charts/issues/1272">issue</a> 和提及到的 <a href="https://github.com/sentry-kubernetes/charts/issues/1042">bug</a></p><p>解决方案：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">exec</span> -it sentry-clickhouse-0 -- bash</span><br><span class="line">clickhouse-client -h sentry-clickhouse</span><br><span class="line"></span><br><span class="line">DROP table default.metrics_raw_v2_dist ON CLUSTER <span class="string">&#x27;sentry-clickhouse&#x27;</span> SYNC;</span><br><span class="line">CREATE TABLE default.metrics_raw_v2_dist ON CLUSTER <span class="string">&#x27;sentry-clickhouse&#x27;</span></span><br><span class="line">(</span><br><span class="line">    `use_case_id` LowCardinality(String),</span><br><span class="line">    `org_id` UInt64,</span><br><span class="line">    `project_id` UInt64,</span><br><span class="line">    `metric_id` UInt64,</span><br><span class="line">    `timestamp` DateTime,</span><br><span class="line">    `tags.key` Array(UInt64),</span><br><span class="line">    `tags.value` Array(UInt64),</span><br><span class="line">    `metric_type` LowCardinality(String),</span><br><span class="line">    `set_values` Array(UInt64),</span><br><span class="line">    `count_value` Float64,</span><br><span class="line">    `distribution_values` Array(Float64),</span><br><span class="line">    `materialization_version` UInt8,</span><br><span class="line">    `retention_days` UInt16,</span><br><span class="line">    `partition` UInt16,</span><br><span class="line">    `offset` UInt64,</span><br><span class="line">    `timeseries_id` UInt32</span><br><span class="line">)</span><br><span class="line">ENGINE = Distributed(<span class="string">&#x27;sentry-clickhouse&#x27;</span>, <span class="string">&#x27;default&#x27;</span>, <span class="string">&#x27;metrics_raw_v2_local&#x27;</span>, sipHash64(<span class="string">&#x27;timeseries_id&#x27;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="替代方案"><a href="#替代方案" class="headerlink" title="替代方案"></a>替代方案</h1><p><a href="https://glitchtip.com/">GlitchTip</a> 是一个 Sentry 的替代方案，可以考虑使用。</p>]]></content>
      
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> sentry </tag>
            
            <tag> deployment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐波那契数列的时间复杂度</title>
      <link href="/2024/05/16/fibonacci-sequence-time-complexity/"/>
      <url>/2024/05/16/fibonacci-sequence-time-complexity/</url>
      
        <content type="html"><![CDATA[<h1 id="斐波那契数列时间复杂度是多少？"><a href="#斐波那契数列时间复杂度是多少？" class="headerlink" title="斐波那契数列时间复杂度是多少？"></a>斐波那契数列时间复杂度是多少？</h1><p>斐波那契数列（Fibonacci sequence）是这样一个数列：除了第一个和第二个数外，任意一个数都可由前两个数相加得到。数列的前几个数字是：0, 1, 1, 2, 3, 5, 8, 13, 21, 34, …</p><p>计算斐波那契数列的第n个数有多种方法，不同的方法时间复杂度也不同。</p><ol><li><p><strong>递归方法</strong>：直接按照斐波那契数列的定义进行递归计算。这种方法的时间复杂度是指数级的，大约是$O(2^n)$。这是因为每增加一个数，计算量大约翻倍。</p></li><li><p><strong>动态规划</strong>：通过存储已经计算过的斐波那契数，避免重复计算，可以将时间复杂度降低到$O(n)$。</p></li><li><p><strong>矩阵快速幂</strong>：利用斐波那契数列的矩阵表示法，可以通过矩阵乘法的快速幂算法将时间复杂度降低到$O(\log n)$。</p></li><li><p><strong>通项公式（Binet’s formula）</strong>：斐波那契数列实际上有一个封闭形式的解，也就是Binet公式，通过这个公式可以直接计算出第n个斐波那契数，但是由于涉及到无理数的运算（黄金分割比例），在计算机上通常不会得到完全精确的结果。理论上，如果能精确计算无理数，这个方法的时间复杂度可以认为是$O(1)$，但实际上受限于浮点数的精度和大数运算的时间复杂度。</p></li></ol><p>所以，斐波那契数列的时间复杂度取决于你选择的算法。</p><h1 id="请给出这几种时间复杂的python代码"><a href="#请给出这几种时间复杂的python代码" class="headerlink" title="请给出这几种时间复杂的python代码"></a>请给出这几种时间复杂的python代码</h1><p>当然可以。以下是使用不同方法实现斐波那契数列计算第n个数的Python代码示例：</p><ol><li><strong>递归方法</strong>（时间复杂度约为$O(2^n)$）:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci_recursive</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fibonacci_recursive(n-<span class="number">1</span>) + fibonacci_recursive(n-<span class="number">2</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>动态规划</strong>（时间复杂度$O(n)$）:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci_dp</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    fib = [<span class="number">0</span>] * (n+<span class="number">1</span>)</span><br><span class="line">    fib[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n+<span class="number">1</span>):</span><br><span class="line">        fib[i] = fib[i-<span class="number">1</span>] + fib[i-<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> fib[n]</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>矩阵快速幂</strong>（时间复杂度$O(\log n)$）:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">matrix_multiply</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> [[<span class="built_in">sum</span>(x * y <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(row, col)) <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">zip</span>(*b)] <span class="keyword">for</span> row <span class="keyword">in</span> a]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">matrix_power</span>(<span class="params">matrix, n</span>):</span><br><span class="line">    result = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>]]  <span class="comment"># Identity matrix</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            result = matrix_multiply(result, matrix)</span><br><span class="line">        matrix = matrix_multiply(matrix, matrix)</span><br><span class="line">        n //= <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci_matrix</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    matrix = [[<span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>]]</span><br><span class="line">    powered_matrix = matrix_power(matrix, n-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> powered_matrix[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>通项公式（Binet’s formula）</strong>（时间复杂度接近$O(1)$，但受限于浮点数精度）:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci_binet</span>(<span class="params">n</span>):</span><br><span class="line">    sqrt_5 = math.sqrt(<span class="number">5</span>)</span><br><span class="line">    phi = (<span class="number">1</span> + sqrt_5) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">round</span>((phi**n - (-<span class="number">1</span>/phi)**n) / sqrt_5)</span><br></pre></td></tr></table></figure><p>请注意，尽管Binet公式的时间复杂度接近$O(1)$，但是当n变得很大时，由于浮点数精度的限制，这个方法计算出的结果可能不准确。而且，由于使用了<code>round</code>函数和<code>**</code>运算符，实际的时间复杂度会受到Python解释器处理这些操作的方式的影响。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> algorithm </tag>
            
            <tag> fibonacci </tag>
            
            <tag> time-complexity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 使用小技巧</title>
      <link href="/2024/05/16/git-usage-tips/"/>
      <url>/2024/05/16/git-usage-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="git-rebase-和-git-merge-有什么区别，请简单解释下，以及需要遵守的原则"><a href="#git-rebase-和-git-merge-有什么区别，请简单解释下，以及需要遵守的原则" class="headerlink" title="git rebase 和 git merge 有什么区别，请简单解释下，以及需要遵守的原则"></a>git rebase 和 git merge 有什么区别，请简单解释下，以及需要遵守的原则</h1><p><code>git rebase</code> 和 <code>git merge</code> 都是用于合并不同分支上的更改的 Git 命令，但它们以不同的方式执行此操作，影响历史的结构和清晰度。</p><h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><ul><li><strong>合并提交</strong>：<code>git merge</code> 会创建一个新的“合并提交”来将两个分支的更改结合起来。</li><li><strong>非线性历史</strong>：合并会保留分支的历史记录，因为它不会改变现有的提交历史。这意味着历史是非线性的，可以清楚地看到项目历史中的分支和合并点。</li><li><strong>简单易懂</strong>：对于不熟悉 Git 的人来说，合并可能更加直观，因为它保留了一个明确的分支和合并的历史记录。</li></ul><h3 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h3><ul><li><strong>重写历史</strong>：<code>git rebase</code> 会将一个分支上的更改“重新播放”在另一个分支的顶部。这通常涉及更改提交的基础（即它们在历史中的位置）。</li><li><strong>线性历史</strong>：重建创建一个更干净、更直线的提交历史，因为它看起来就像所有的更改都是按顺序一个接一个地发生的，即使它们原本是在不同的分支上开发的。</li><li><strong>冲突解决</strong>：在 rebase 过程中，可能需要解决与基础分支上的新提交相关的冲突。这可能比合并时更频繁，因为每个提交都要重新应用。</li></ul><h3 id="需要遵守的原则"><a href="#需要遵守的原则" class="headerlink" title="需要遵守的原则"></a>需要遵守的原则</h3><ul><li><strong>不要在公共分支上 rebase</strong>：如果你的分支是别人也在用的（例如 <code>main</code> 或 <code>develop</code> 分支），那么不要使用 rebase。这会改变历史，对其他人来说可能会造成混乱。</li><li><strong>合并公共分支，rebase特性分支</strong>：通常，合并用于将更改从一个公共分支（如 <code>main</code>）合并到另一个公共分支（如 <code>release</code> 分支）。而 rebase 通常用于特性分支，以更新它们或准备合并到主分支。</li><li><strong>清晰的历史</strong>：如果你想要一个干净、线性的历史，那么 rebase 是一个不错的选择。如果你想保留完整的历史和分支上下文，那么合并可能更合适。</li><li><strong>团队协作</strong>：在团队环境中，确保所有成员都理解你们是合并还是 rebase，以及何时使用它们，以避免混乱。</li><li><strong>安全操作</strong>：在执行 rebase 之前，最好创建一个新的分支或确保你的更改已经推送到远程仓库，以防万一需要恢复原始分支。</li></ul><p>使用这些命令时，考虑你的工作流程、团队的偏好以及你想要的提交历史的结构。在某些情况下，你可能会根据具体情况交替使用这两个命令。</p><h1 id="git-如何将-project-下面的默认分支由-main-改为-master"><a href="#git-如何将-project-下面的默认分支由-main-改为-master" class="headerlink" title="git 如何将 project 下面的默认分支由 main 改为 master"></a>git 如何将 project 下面的默认分支由 main 改为 master</h1><p>在Git中，更改项目的默认分支需要几个步骤。首先，你需要在本地仓库创建新的分支（如果还没有的话），然后推送到远程仓库，最后在远程仓库（比如GitHub, GitLab, Bitbucket等）的设置中更改默认分支。</p><p>下面是在命令行中执行这个操作的步骤：</p><ol><li><p><strong>在本地创建新的<code>master</code>分支（如果还没有的话）</strong>:</p><p>如果你还没有<code>master</code>分支，你可以从<code>main</code>分支创建一个：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch master main</span><br></pre></td></tr></table></figure></li><li><p><strong>将新的<code>master</code>分支推送到远程仓库</strong>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li><li><p><strong>在远程仓库设置中更改默认分支</strong>:</p><ul><li>对于GitHub，你需要去仓库的 “Settings” -&gt; “Branches” -&gt; “Default branch”，选择<code>master</code>作为默认分支。</li><li>对于GitLab，你需要去仓库的 “Settings” -&gt; “Repository” -&gt; “Default Branch”，选择<code>master</code>。</li><li>对于Bitbucket，你需要去仓库的 “Repository settings” -&gt; “Branches” -&gt; “Main branch”，选择<code>master</code>。</li></ul></li><li><p><strong>（可选）删除旧的<code>main</code>分支</strong>:</p><p>如果你想要删除旧的<code>main</code>分支，你可以这样做：</p><ul><li><p>首先确保你不在<code>main</code>分支上：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure></li><li><p>删除本地的<code>main</code>分支：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d main</span><br></pre></td></tr></table></figure></li><li><p>删除远程的<code>main</code>分支：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete main</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>请注意，更改默认分支可能会对其他开发者和正在进行的工作产生影响，因此在执行这些操作之前，最好通知所有相关人员。此外，如果你的仓库已经配置了CI&#x2F;CD或其他自动化系统，你可能需要更新它们以反映新的默认分支。</p><h1 id="git-如何撤销-develop-修改，保持和master-同步"><a href="#git-如何撤销-develop-修改，保持和master-同步" class="headerlink" title="git 如何撤销 develop 修改，保持和master 同步"></a>git 如何撤销 develop 修改，保持和master 同步</h1><p>在 Git 中，如果你想要将 <code>develop</code> 分支的状态回退到与 <code>master</code> 分支一致的状态，你可以使用几种不同的方法。下面是一些常见的做法：</p><h3 id="方法一：重置（Reset）"><a href="#方法一：重置（Reset）" class="headerlink" title="方法一：重置（Reset）"></a>方法一：重置（Reset）</h3><p>如果你想要丢弃 <code>develop</code> 分支上所有不在 <code>master</code> 分支上的提交，你可以使用 <code>reset</code> 命令。首先，确保你已经拉取了最新的 <code>master</code> 分支的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>然后，切换回 <code>develop</code> 分支，并使用 <code>reset</code> 命令来重置它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure><p>这会将 <code>develop</code> 分支的头指针移动到 <code>master</code> 分支的当前位置，并且丢弃 <code>develop</code> 分支上 <code>reset</code> 之后的所有更改。</p><h3 id="方法二：合并（Merge）"><a href="#方法二：合并（Merge）" class="headerlink" title="方法二：合并（Merge）"></a>方法二：合并（Merge）</h3><p>如果你想要保持 <code>develop</code> 分支上的提交历史，并且将其与 <code>master</code> 同步，你可以使用 <code>merge</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git merge master</span><br></pre></td></tr></table></figure><p>如果 <code>master</code> 分支上有 <code>develop</code> 分支上没有的提交，这些提交会被合并到 <code>develop</code> 分支上。如果 <code>develop</code> 分支上有一些额外的提交，它们将保持不变。</p><h3 id="方法三：变基（Rebase）"><a href="#方法三：变基（Rebase）" class="headerlink" title="方法三：变基（Rebase）"></a>方法三：变基（Rebase）</h3><p>如果你想要重新排列 <code>develop</code> 分支上的提交，使其看起来像是基于当前 <code>master</code> 分支的最新提交，你可以使用 <code>rebase</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git rebase master</span><br></pre></td></tr></table></figure><p>这将会把 <code>develop</code> 分支上的所有更改应用在 <code>master</code> 分支的顶端。这个过程可能会产生冲突，需要手动解决。</p><h3 id="方法四：创建一个新的分支"><a href="#方法四：创建一个新的分支" class="headerlink" title="方法四：创建一个新的分支"></a>方法四：创建一个新的分支</h3><p>如果你不想在 <code>develop</code> 分支上直接操作，你可以创建一个新的分支来替代当前的 <code>develop</code> 分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git branch -D develop  <span class="comment"># 删除旧的 develop 分支</span></span><br><span class="line">git checkout -b develop  <span class="comment"># 基于 master 创建新的 develop 分支</span></span><br><span class="line">git push -f origin develop  <span class="comment"># 强制推送新的 develop 分支到远程仓库</span></span><br></pre></td></tr></table></figure><p>请注意，强制推送 (<code>git push -f</code>) 可能会影响其他协作者，因为它会重写远程仓库的历史。在使用强制推送之前，请确保与你的团队成员沟通。</p><p>在执行上述任何操作之前，建议先备份你的分支，以防不小心丢失数据。使用 <code>git branch</code> 命令可以很容易地创建一个新的备份分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout develop</span><br><span class="line">git branch backup_develop  <span class="comment"># 创建 develop 的备份</span></span><br></pre></td></tr></table></figure><p>这样，如果出现任何问题，你可以使用备份分支来恢复你的状态。</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> version-control </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Base64 创建方式不同的 bug</title>
      <link href="/2024/05/16/base64-create-different/"/>
      <url>/2024/05/16/base64-create-different/</url>
      
        <content type="html"><![CDATA[<h1 id="python-base64-的方法"><a href="#python-base64-的方法" class="headerlink" title="python base64 的方法"></a>python base64 的方法</h1><p>在Python中，<code>base64</code>模块提供了一系列用于编码和解码Base64的函数。下面是一些常用的方法：</p><ol><li><p><code>base64.b64encode(s)</code>: 对字符串<code>s</code>进行Base64编码。这里的<code>s</code>应该是字节类型，如果你有一个字符串类型的数据，需要先用<code>.encode()</code>方法将其转换为字节类型。</p></li><li><p><code>base64.b64decode(s)</code>: 对Base64编码的字符串<code>s</code>进行解码。返回的也是字节类型的数据。</p></li><li><p><code>base64.urlsafe_b64encode(s)</code>: 和<code>b64encode</code>类似，但是生成的Base64编码会将<code>+</code>和<code>/</code>分别替换为<code>-</code>和<code>_</code>，使得编码后的结果可以在URL中安全地使用。</p></li><li><p><code>base64.urlsafe_b64decode(s)</code>: 对用<code>urlsafe_b64encode</code>方法编码的字符串进行解码。</p></li></ol><p>下面是一个简单的例子，展示如何使用这些方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原始数据</span></span><br><span class="line">data = <span class="string">&quot;Python Base64 编码测试！&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串转换为字节</span></span><br><span class="line">data_bytes = data.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line">encoded_data = base64.b64encode(data_bytes)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;编码后的数据:&quot;</span>, encoded_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line">decoded_data = base64.b64decode(encoded_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;解码后的数据:&quot;</span>, decoded_data.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL安全的编码</span></span><br><span class="line">urlsafe_encoded_data = base64.urlsafe_b64encode(data_bytes)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;URL安全的编码数据:&quot;</span>, urlsafe_encoded_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># URL安全的解码</span></span><br><span class="line">urlsafe_decoded_data = base64.urlsafe_b64decode(urlsafe_encoded_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;URL安全的解码数据:&quot;</span>, urlsafe_decoded_data.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>请注意，Base64编码不是加密方法，它仅仅是一种编码方式，可以很容易地被解码。不应该用来保护敏感信息。</p><h1 id="为什么-shell-中的-echo-‘abc’-base64-和-python-中的不一样？如何一样"><a href="#为什么-shell-中的-echo-‘abc’-base64-和-python-中的不一样？如何一样" class="headerlink" title="为什么 shell 中的 echo ‘abc’ | base64 和 python 中的不一样？如何一样"></a>为什么 shell 中的 echo ‘abc’ | base64 和 python 中的不一样？如何一样</h1><p>在Shell中使用<code>echo</code>命令时，默认情况下，<code>echo</code>会在输出的末尾添加一个换行符（<code>\n</code>）。这个换行符也会被<code>base64</code>编码。而在Python中，如果你直接对字符串<code>&#39;abc&#39;</code>进行编码，你不会在字符串末尾添加换行符。</p><p>为了在Shell中得到与Python中相同的结果，你需要使用<code>echo</code>命令的<code>-n</code>选项，这样它就不会在字符串末尾添加换行符了。</p><p>Shell命令（不添加换行符）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n <span class="string">&#x27;abc&#x27;</span> | <span class="built_in">base64</span></span><br></pre></td></tr></table></figure><p>对应的Python代码（不添加换行符）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line">encoded_data = base64.b64encode(data.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(encoded_data.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>两者现在应该给出相同的Base64编码结果。</p><p>如果你想在Python中得到包含换行符的版本，你可以这样做：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;abc\n&#x27;</span>  <span class="comment"># 添加换行符</span></span><br><span class="line">encoded_data = base64.b64encode(data.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(encoded_data.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>这将模拟Shell中不带<code>-n</code>选项的<code>echo</code>命令的行为。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> base64 </tag>
            
            <tag> shell </tag>
            
            <tag> echo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab-tips.md</title>
      <link href="/2024/05/16/gitlab-tips/"/>
      <url>/2024/05/16/gitlab-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="gitlab-stages-如何并行"><a href="#gitlab-stages-如何并行" class="headerlink" title="gitlab stages 如何并行"></a>gitlab stages 如何并行</h1><p>在 GitLab CI&#x2F;CD 中，你可以通过定义作业（jobs）并指定它们属于同一个阶段（stage），来实现这些作业在该阶段并行执行。默认情况下，同一个阶段中的作业会并行执行，前提是你有足够的并发运行器（runner）来支持并行执行。如果运行器数量不足，作业将会排队等待可用的运行器。</p><p>以下是一个简单的 <code>.gitlab-ci.yml</code> 文件示例，展示了如何设置并行作业：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job1:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;This is job1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">job2:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;This is job2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test1:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;This is test1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test2:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;This is test2&quot;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>job1</code> 和 <code>job2</code> 都属于 <code>build</code> 阶段，它们将会并行执行（前提是有足够的运行器）。同样的，<code>test1</code> 和 <code>test2</code> 都属于 <code>test</code> 阶段，也会并行执行。</p><p>如果你想要更细粒度地控制作业的并行性，你可以使用 GitLab 的 <code>parallel</code> 关键字。这允许你将单个作业分成多个实例，它们可以并行运行。例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">test</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">&quot;This is a parallel test&quot;</span></span><br><span class="line">  <span class="attr">parallel:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>在这个例子中，<code>test</code> 作业将会启动三个并行的实例。</p><p>要注意的是，GitLab Runner 的并发数是可以配置的。在 Runner 的配置文件中，你可以设置 <code>concurrent</code> 的值来限制并发作业的数量。如果你的并发数设置得太低，即使你在 <code>.gitlab-ci.yml</code> 中配置了并行作业，它们也可能不会真正并行执行。</p><p>确保你的 GitLab Runner 配置可以支持你期望的并行作业数量，这样你才能充分利用 GitLab CI&#x2F;CD 的并行执行能力。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
            <tag> gitlab </tag>
            
            <tag> ci/cd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell 小技巧 —— Sed</title>
      <link href="/2024/05/16/shell-tips-sed/"/>
      <url>/2024/05/16/shell-tips-sed/</url>
      
        <content type="html"><![CDATA[<h1 id="sed-语法可以用其他字符代替-吗-‘s-abc-xyz-g’"><a href="#sed-语法可以用其他字符代替-吗-‘s-abc-xyz-g’" class="headerlink" title="sed 语法可以用其他字符代替 &#x2F; 吗 ‘s&#x2F;abc&#x2F;xyz&#x2F;g’"></a>sed 语法可以用其他字符代替 &#x2F; 吗 ‘s&#x2F;abc&#x2F;xyz&#x2F;g’</h1><p>是的，在<code>sed</code>命令中，通常使用的分隔符是正斜杠<code>/</code>，但是你可以使用几乎任何其他字符作为分隔符。如果你需要处理包含正斜杠的路径或数据，使用其他字符作为分隔符会很方便。</p><p>例如，如果你想把字符串<code>abc</code>替换成<code>xyz</code>，你可以写成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s/abc/xyz/g&#x27;</span></span><br></pre></td></tr></table></figure><p>如果你的模式或替换字符串中包含正斜杠，如<code>/path/to/abc</code>替换为<code>/path/to/xyz</code>，你可以使用其他字符，例如<code>#</code>，来避免混淆：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s#/path/to/abc#/path/to/xyz#g&#x27;</span></span><br></pre></td></tr></table></figure><p>或者使用下划线<code>_</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;s_/path/to/abc_/path/to/xyz_g&#x27;</span></span><br></pre></td></tr></table></figure><p>使用不同的分隔符可以让<code>sed</code>命令更加可读，尤其是当处理包含正斜杠的文件路径时。只需确保所选的分隔符不会在模式或替换文本中出现，否则你需要对该字符进行转义。</p>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> ChatGPT </tag>
            
            <tag> sed </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 设置系统时钟同步</title>
      <link href="/2024/05/16/ubuntu-sync-system-clock/"/>
      <url>/2024/05/16/ubuntu-sync-system-clock/</url>
      
        <content type="html"><![CDATA[<p>在Ubuntu系统中，您可以通过<code>timedatectl</code>命令或者安装和配置<code>ntp</code>服务来设置时钟同步。</p><h3 id="使用timedatectl命令"><a href="#使用timedatectl命令" class="headerlink" title="使用timedatectl命令"></a>使用<code>timedatectl</code>命令</h3><ol><li>首先，您可以使用<code>timedatectl</code>命令查看当前的时间同步状态：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl status</span><br></pre></td></tr></table></figure><ol start="2"><li>如果<code>NTP enabled</code>没有被激活，您可以使用以下命令来激活NTP时间同步：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这将会启用<code>systemd-timesyncd</code>服务，该服务会与外部NTP服务器同步时间。</p><h3 id="安装和配置NTP服务"><a href="#安装和配置NTP服务" class="headerlink" title="安装和配置NTP服务"></a>安装和配置NTP服务</h3><p>如果您需要更精细的时间同步控制，或者<code>systemd-timesyncd</code>不满足您的需求，您可以安装完整的NTP服务。</p><ol><li>安装NTP服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ntp</span><br></pre></td></tr></table></figure><ol start="2"><li>安装完成后，编辑NTP配置文件<code>/etc/ntp.conf</code>，您可以使用<code>nano</code>或者<code>vi</code>编辑器：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/ntp.conf</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ntp.conf</span><br></pre></td></tr></table></figure><ol start="3"><li>在配置文件中，您可以添加或修改NTP服务器。例如，您可以使用公共NTP服务器或您组织内部的NTP服务器。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server 0.ubuntu.pool.ntp.org</span><br><span class="line">server 1.ubuntu.pool.ntp.org</span><br><span class="line">server 2.ubuntu.pool.ntp.org</span><br><span class="line">server 3.ubuntu.pool.ntp.org</span><br></pre></td></tr></table></figure><ol start="4"><li>保存并关闭文件。然后重启NTP服务以应用更改：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart ntp</span><br></pre></td></tr></table></figure><ol start="5"><li>最后，您可以使用以下命令检查NTP服务的状态：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpq -p</span><br></pre></td></tr></table></figure><p>这将显示一个列表，其中包含NTP服务器和它们的状态。</p><p>确保您的防火墙或网络安全设置允许NTP服务的流量（通常是UDP 123端口）。如果您在一个受限制的网络环境中，您可能需要配置特定的NTP服务器或调整防火墙设置。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> ntp </tag>
            
            <tag> systemd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell 小技巧 —— Systemctl</title>
      <link href="/2024/05/16/shell-tips-systemctl/"/>
      <url>/2024/05/16/shell-tips-systemctl/</url>
      
        <content type="html"><![CDATA[<h1 id="查看-systemctl-启动的服务列表"><a href="#查看-systemctl-启动的服务列表" class="headerlink" title="查看 systemctl 启动的服务列表"></a>查看 systemctl 启动的服务列表</h1><p>在 Linux 系统中，<code>systemctl</code> 是一个用于控制 <code>systemd</code> 系统和服务管理器的命令行工具。要查看由 <code>systemctl</code> 启动的服务列表，你可以使用以下命令：</p><ol><li><p>查看所有已启动的服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service --state=running</span><br></pre></td></tr></table></figure><p>这个命令会列出所有当前处于运行状态的服务。</p></li><li><p>查看所有已安装的服务，不论其状态：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-units --<span class="built_in">type</span>=service --all</span><br></pre></td></tr></table></figure><p>使用 <code>--all</code> 选项可以显示所有服务，包括未启动或者处于不活跃状态的服务。</p></li><li><p>查看特定服务的状态：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status &lt;service_name&gt;.service</span><br></pre></td></tr></table></figure><p>将 <code>&lt;service_name&gt;</code> 替换为你想要查看状态的服务名。这会给出该服务的详细状态信息，包括是否正在运行、启动失败的原因等。</p></li><li><p>查看所有服务的状态摘要：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><p>这个命令会列出所有服务的状态摘要，显示服务是否被设置为在启动时自动启动等信息。</p></li><li><p>查看特定状态的服务：</p><p>如果你只对特定状态的服务感兴趣，比如想要查看所有失败的服务，可以使用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl --failed</span><br></pre></td></tr></table></figure><p>这将列出所有处于失败状态的服务。</p></li><li><p>启用和禁用服务：</p><p>如果你想要设置服务在启动时自动运行或者禁止自动运行，可以使用以下命令：</p><ul><li><p>启用服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> &lt;service_name&gt;.service</span><br></pre></td></tr></table></figure></li><li><p>禁用服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> &lt;service_name&gt;.service</span><br></pre></td></tr></table></figure></li></ul><p>替换 <code>&lt;service_name&gt;</code> 为你想要启用或禁用的服务名。</p></li></ol><p>记得在使用 <code>systemctl</code> 命令时，根据你的系统设置，你可能需要使用 <code>sudo</code> 来获取必要的权限。</p><h1 id="如何关闭-postgres"><a href="#如何关闭-postgres" class="headerlink" title="如何关闭 postgres"></a>如何关闭 postgres</h1><p>如果你想要停止、禁用或者重启PostgreSQL服务，你可以使用<code>systemctl</code>命令。以下是一些常用的命令：</p><ol><li><p>停止PostgreSQL服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop postgresql</span><br></pre></td></tr></table></figure></li><li><p>禁用PostgreSQL服务，使其不在启动时自动运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> postgresql</span><br></pre></td></tr></table></figure></li><li><p>重启PostgreSQL服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart postgresql</span><br></pre></td></tr></table></figure></li><li><p>查看PostgreSQL服务的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status postgresql</span><br></pre></td></tr></table></figure></li></ol><p>如果你有多个PostgreSQL版本安装在你的系统上，服务名称可能会包含版本号，例如<code>postgresql-10</code>。你可以通过运行以下命令来查看所有的PostgreSQL服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl list-units --<span class="built_in">type</span>=service | grep postgres</span><br></pre></td></tr></table></figure><p>根据输出，你可能需要指定具体的服务名来停止或者禁用特定版本的PostgreSQL服务，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop postgresql@10-main</span><br><span class="line">sudo systemctl <span class="built_in">disable</span> postgresql@10-main</span><br></pre></td></tr></table></figure><p>替换<code>10</code>为你的PostgreSQL版本号。如果你不确定版本号，上面的命令将帮助你找到正确的服务名。</p>]]></content>
      
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> ChatGPT </tag>
            
            <tag> linux </tag>
            
            <tag> systemctl </tag>
            
            <tag> postgres </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubectl 快捷命令</title>
      <link href="/2024/05/11/kubectl-tips/"/>
      <url>/2024/05/11/kubectl-tips/</url>
      
        <content type="html"><![CDATA[<h1 id="如何使用-kubectl-删除以-foo-bar-开头的-job"><a href="#如何使用-kubectl-删除以-foo-bar-开头的-job" class="headerlink" title="如何使用 kubectl 删除以 foo-bar 开头的 job"></a>如何使用 kubectl 删除以 foo-bar 开头的 job</h1><p>在 Kubernetes 中，如果你想要删除所有以特定前缀开头的 Job，你可以使用 <code>kubectl</code> 命令与 shell 的管道和过滤命令组合来完成这个操作。</p><p>下面是一个使用 <code>kubectl</code> 删除所有以 <code>foo-bar</code> 开头的 Job 的命令示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get <span class="built_in">jobs</span> -o name | grep <span class="string">&#x27;foo-bar&#x27;</span> | xargs kubectl delete</span><br></pre></td></tr></table></figure><p>这个命令的工作原理如下：</p><ol><li><code>kubectl get jobs -o name</code>：列出所有 Job 的名称。</li><li><code>grep &#39;foo-bar&#39;</code>：使用 <code>grep</code> 命令过滤出以 <code>foo-bar</code> 开头的 Job 名称。</li><li><code>xargs kubectl delete</code>：<code>xargs</code> 命令会接收来自 <code>grep</code> 的输出，并将每一行输出作为参数传递给 <code>kubectl delete</code> 命令，从而删除这些 Job。</li></ol><p>在执行这个命令之前，请确保你有足够的权限来删除 Job，并且你已经确认过这些 Job 是可以被删除的，因为该操作是不可逆的。如果你想要先看看具体会删除哪些 Job，你可以先运行不带 <code>xargs kubectl delete</code> 的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get <span class="built_in">jobs</span> -o name | grep <span class="string">&#x27;foo-bar&#x27;</span></span><br></pre></td></tr></table></figure><p>这将只列出所有将被删除的 Job 的名称，不会执行任何删除操作。如果你确认这些是你想要删除的 Job，再运行完整的删除命令。</p><p>如果你的 Kubernetes 集群中 Job 资源不是在默认命名空间中，你需要指定正确的命名空间，使用 <code>-n</code> 或 <code>--namespace</code> 参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get <span class="built_in">jobs</span> --namespace your-namespace -o name | grep <span class="string">&#x27;foo-bar&#x27;</span> | xargs kubectl delete --namespace your-namespace</span><br></pre></td></tr></table></figure><p>将 <code>your-namespace</code> 替换为实际的命名空间名称。</p><h1 id="k8s-如何设置默认-storageClass"><a href="#k8s-如何设置默认-storageClass" class="headerlink" title="k8s 如何设置默认 storageClass"></a>k8s 如何设置默认 storageClass</h1><p>在 Kubernetes 中，设置默认的 StorageClass 可以通过以下步骤实现：</p><ol><li><p><strong>查看现有的 StorageClass：</strong></p><p>首先，查看集群中已经存在的 StorageClass：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get storageclass</span><br></pre></td></tr></table></figure></li><li><p><strong>设置默认 StorageClass：</strong></p><p>假设你想将某个名为 <code>my-storage-class</code> 的 StorageClass 设置为默认的，你需要编辑该 StorageClass 的配置，并添加 <code>storageclass.kubernetes.io/is-default-class</code> 注解。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch storageclass my-storage-class -p <span class="string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>移除其他 StorageClass 的默认注解：</strong></p><p>如果之前已经有其他 StorageClass 被设置为默认，你需要移除它们的默认注解。假设另一个名为 <code>old-default-storage-class</code> 的 StorageClass 之前被设置为默认：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl patch storageclass old-default-storage-class -p <span class="string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;false&quot;&#125;&#125;&#125;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>验证设置：</strong></p><p>再次查看 StorageClass 列表，确认新的默认 StorageClass 设置成功：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get storageclass</span><br></pre></td></tr></table></figure><p>你应该会看到 <code>my-storage-class</code> 的 <code>storageclass.kubernetes.io/is-default-class</code> 注解被设置为 <code>true</code>。</p></li></ol><p>通过这些步骤，你可以成功地设置或更改 Kubernetes 集群中的默认 StorageClass。</p>]]></content>
      
      
      
        <tags>
            
            <tag> kubectl </tag>
            
            <tag> k8s </tag>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建 PostgreSQL 用户和数据库</title>
      <link href="/2024/04/22/create-postgres-user-and-database/"/>
      <url>/2024/04/22/create-postgres-user-and-database/</url>
      
        <content type="html"><![CDATA[<h1 id="简化-SQL-语句，-注意高版本的-PostgreSQL-需要使用-GRANT-命令"><a href="#简化-SQL-语句，-注意高版本的-PostgreSQL-需要使用-GRANT-命令" class="headerlink" title="简化 SQL 语句， 注意高版本的 PostgreSQL 需要使用 GRANT 命令"></a>简化 SQL 语句， 注意高版本的 PostgreSQL 需要使用 <code>GRANT</code> 命令</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> role foo <span class="keyword">with</span> login password <span class="string">&#x27;yourpassword&#x27;</span> valid until <span class="string">&#x27;infinity&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 高版本需要使用这个命令</span></span><br><span class="line"><span class="keyword">GRANT</span> foo <span class="keyword">TO</span> postgres;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> database bar <span class="keyword">with</span> encoding<span class="operator">=</span><span class="string">&#x27;UTF8&#x27;</span> owner<span class="operator">=</span>foo connection limit<span class="operator">=</span><span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">REVOKE</span> foo <span class="keyword">FROM</span> postgres;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Reference: </p><ol><li><a href="https://www.cnblogs.com/zhangpengshou/p/5464610.html">ubuntu下postgreSQL安装配置</a></li><li><a href="https://www.postgresql.org/docs/9.1/backup-dump.html#BACKUP-DUMP-RESTORE">Backup&amp;Restore</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Authentik 使用钉钉登录</title>
      <link href="/2024/04/10/authentik-use-dingtalk-login/"/>
      <url>/2024/04/10/authentik-use-dingtalk-login/</url>
      
        <content type="html"><![CDATA[<h1 id="Authentik-使用钉钉登录"><a href="#Authentik-使用钉钉登录" class="headerlink" title="Authentik 使用钉钉登录"></a>Authentik 使用钉钉登录</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Authentik 是一个开源的身份验证和授权服务，它提供了一种简单的方式来添加用户身份验证和授权功能到您的应用程序中。Authentik 支持多种身份验证方式，包括用户名密码、社交登录、LDAP 等。</p><p>钉钉是一款企业级即时通讯和协作工具，它提供了丰富的 API 和 SDK，可以用于集成企业内部系统和第三方应用。</p><p>在这个示例中，我们将演示如何使用 Authentik 集成钉钉登录，以便用户可以使用他们的钉钉账户登录到您的应用程序中。</p><p>钉钉是有 OAuth2 授权机制的，我们将使用 Authentik 的 OAuth2 提供程序来实现钉钉登录。</p><p>Authentik 的 OAuth2 提供程序允许您将任何符合 OAuth2 标准的身份验证服务集成到 Authentik 中，以便用户可以使用这些服务登录到您的应用程序中。<a href="https://docs.goauthentik.io/integrations/sources/oauth/">参见文档</a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="1-创建钉钉应用"><a href="#1-创建钉钉应用" class="headerlink" title="1. 创建钉钉应用"></a>1. 创建钉钉应用</h3><p>可以参见 Gitlab 的文档 <a href="https://docs.gitlab.com/ee/integration/ding_talk.html">DingTalk 集成</a> 或 Casdoor 的文档 <a href="https://casdoor.org/zh/docs/provider/oauth/DingTalk/">DingTalk OAuth</a> 来创建一个钉钉应用。</p><h4 id="1-1-OAuth-接口说明"><a href="#1-1-OAuth-接口说明" class="headerlink" title="1.1 OAuth 接口说明"></a>1.1 OAuth 接口说明</h4><p>参见文档：<a href="https://open.dingtalk.com/document/orgapp/obtain-identity-credentials">获取登录用户的访问凭证</a></p><p>在 github 找到一个<a href="https://github.com/directus/directus/discussions/11881">示例</a></p><details><summary>示例代码</summary><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">Dingtalk is an enterprise communication tool similar to Jira/Confluence/WhatApp. It provides OAuth 2 service. The protocol is as below.</span><br><span class="line"></span><br><span class="line">OAuth2 protocol, Dingtalk version</span><br><span class="line">Auth</span><br><span class="line">GET https://login.dingtalk.com/oauth2/auth?</span><br><span class="line">redirect_uri=https%3A%2F%2Fwww.baidu.com%2F&amp;response_type=code&amp;client_id=dingyourclientid&amp;scope=openid&amp;prompt=consent</span><br><span class="line"></span><br><span class="line">The redirect callback after Auth will be with below format:</span><br><span class="line">https://www.baidu.com/?authCode=6b427e8bfab83e93bedd13f16a430702</span><br><span class="line"></span><br><span class="line">Get token</span><br><span class="line">POST https://api.dingtalk.com/v1.0/oauth2/userAccessToken</span><br><span class="line">Content-Type:application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;clientId&quot; : &quot;ding your id&quot;,</span><br><span class="line">  &quot;clientSecret&quot; : &quot;your secret&quot;,</span><br><span class="line">  &quot;code&quot; : &quot;6b427e8bfab83e93bedd13f16a430702&quot;,</span><br><span class="line">  &quot;grantType&quot; : &quot;authorization_code&quot;</span><br><span class="line">&#125;</span><br><span class="line">The response will be</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;expireIn&quot;: 7200,</span><br><span class="line">  &quot;accessToken&quot;: &quot;a8f4e3215a703ce9a7164e91dbab53c0&quot;,</span><br><span class="line">  &quot;refreshToken&quot;: &quot;b13e5a61b421342d95d86c9e64c275c6&quot;</span><br><span class="line">&#125;</span><br><span class="line">Retrieve user info</span><br><span class="line">GET https://api.dingtalk.com/v1.0/contact/users/me</span><br><span class="line">x-acs-dingtalk-access-token:a8f4e3215a703ce9a7164e91dbab53c0</span><br><span class="line">Content-Type:application/json</span><br><span class="line"></span><br><span class="line">Response will be</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;nick&quot;: &quot;AWIS ME&quot;,</span><br><span class="line">  &quot;unionId&quot;: &quot;D578iS5hxxxx&quot;,</span><br><span class="line">  &quot;avatarUrl&quot;: &quot;https://static-legacy.dingtalk.com/media/lADPGT5i9m5ZyXDNA4LNAtA_720.jpg&quot;,</span><br><span class="line">  &quot;openId&quot;: &quot;WySPOpXqxE&quot;,</span><br><span class="line">  &quot;mobile&quot;: &quot;1350xxxxxxxx&quot;,</span><br><span class="line">  &quot;stateCode&quot;: &quot;86&quot;,</span><br><span class="line">  &quot;email&quot;: &quot;xxxu@xxx.com&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><p>以及一些其他服务集成的代码样例 <a href="https://github.com/xu4wang/apiproxy/blob/main/src/handlers/oauth_dingtalk.ts">apiproxy</a> 和 <a href="https://github.com/ory/kratos/blob/eb67bed1f26d2c7ff10e5481b679b2213b44676d/selfservice/strategy/oidc/provider_dingtalk.go">kratos</a></p><h3 id="2-配置-Authentik"><a href="#2-配置-Authentik" class="headerlink" title="2. 配置 Authentik"></a>2. 配置 Authentik</h3><p>可以参见配置 Twtich 的文档 <a href="https://docs.goauthentik.io/integrations/sources/twitch/">Twitch 集成</a></p><p>记得要选择 OpenID Connect 作为身份验证类型。</p><p>注意 <code>Scopes</code> 要填写 *openid, <code>Authorization URL</code> 要填写 <a href="https://login.dingtalk.com/oauth2/auth?prompt=consent">https://login.dingtalk.com/oauth2/auth?prompt=consent</a></p><p>至于 <code>Token URL</code> 和 <code>User Info URL</code> 可以则需要自定义转化服务的 URL， 这是因为钉钉的 OAuth2 接口是非标准的（命名方法不一样，参数内容也有一些细微差异），所以需要自己实现一个 OAuth2 提供程序。可参见<a href="https://zhuanlan.zhihu.com/p/666423994">这篇文章</a></p><h3 id="3-实现-OAuth2-提供程序"><a href="#3-实现-OAuth2-提供程序" class="headerlink" title="3. 实现 OAuth2 提供程序"></a>3. 实现 OAuth2 提供程序</h3><p>我是使用 aws serverless 来实现的，代码如下：</p><details><summary> /auth/dingtalk/token </summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> parse_qs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TOKEN_URL = <span class="string">&#x27;https://api.dingtalk.com/v1.0/oauth2/userAccessToken&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_form_data_to_json</span>(<span class="params">form_data</span>):</span><br><span class="line">    parsed_data = parse_qs(form_data)</span><br><span class="line">    result = &#123;k: v[<span class="number">0</span>] <span class="keyword">for</span> k, v <span class="keyword">in</span> parsed_data.items()&#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;event:\n<span class="subst">&#123;event&#125;</span>&quot;</span>)</span><br><span class="line">    s = event.get(<span class="string">&quot;body&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> event.get(<span class="string">&quot;isBase64Encoded&quot;</span>) <span class="keyword">and</span> s:</span><br><span class="line">        s = b64decode(s).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    body = parse_form_data_to_json(s)</span><br><span class="line"></span><br><span class="line">    headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line">    response = requests.post(TOKEN_URL, json=&#123;</span><br><span class="line">        <span class="string">&#x27;clientId&#x27;</span>: body.get(<span class="string">&#x27;client_id&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;clientSecret&#x27;</span>: body.get(<span class="string">&#x27;client_secret&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;code&#x27;</span>: body.get(<span class="string">&#x27;code&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;grantType&#x27;</span>: body.get(<span class="string">&#x27;grant_type&#x27;</span>),</span><br><span class="line">    &#125;, headers=headers)</span><br><span class="line">    response.raise_for_status()</span><br><span class="line">    res = response.json()</span><br><span class="line"></span><br><span class="line">    result = &#123;</span><br><span class="line">        <span class="comment"># &#x27;refresh_token&#x27;: result.get(&#x27;refreshToken&#x27;),</span></span><br><span class="line">        <span class="string">&#x27;access_token&#x27;</span>: res.get(<span class="string">&#x27;accessToken&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;expires_in&#x27;</span>: res.get(<span class="string">&#x27;expiresIn&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;token_type&#x27;</span>: <span class="string">&#x27;Bearer&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;statusCode&quot;</span>: <span class="number">200</span>, <span class="string">&quot;body&quot;</span>: json.dumps(result)&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><details><summary> /auth/dingtalk/profile </summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&#x27;https://api.dingtalk.com/v1.0/contact/users/me&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;event:\n<span class="subst">&#123;event&#125;</span>&quot;</span>)</span><br><span class="line">    access_token = event.get(<span class="string">&#x27;headers&#x27;</span>, &#123;&#125;).get(<span class="string">&#x27;authorization&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    access_token = access_token.replace(<span class="string">&#x27;Bearer &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;x-acs-dingtalk-access-token&#x27;</span>: access_token,</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.get(URL, headers=headers)</span><br><span class="line">    response.raise_for_status()</span><br><span class="line">    user_info = response.json()</span><br><span class="line">    <span class="built_in">print</span>(user_info)</span><br><span class="line"></span><br><span class="line">    result = &#123;</span><br><span class="line">        <span class="comment"># &#x27;issuer&#x27;: userInfoURL,</span></span><br><span class="line">        <span class="comment"># &#x27;picture&#x27;: user_info.get(&#x27;avatarUrl&#x27;),</span></span><br><span class="line">        <span class="string">&#x27;sub&#x27;</span>: user_info[<span class="string">&#x27;openId&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;nickname&#x27;</span>: user_info[<span class="string">&#x27;nick&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: user_info[<span class="string">&#x27;nick&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: user_info[<span class="string">&#x27;email&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;statusCode&quot;</span>: <span class="number">200</span>, <span class="string">&quot;body&quot;</span>: json.dumps(result)&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h4 id="错误排查"><a href="#错误排查" class="headerlink" title="错误排查"></a>错误排查</h4><p>如果出现 <code>Could not determine id.</code> 的错误，可以参见 <a href="https://github.com/goauthentik/authentik/blob/main/authentik/sources/oauth/types/oidc.py">源码解决</a> 来解决， 我当时处理少了 sub 参数。报错实现的<a href="https://github.com/goauthentik/authentik/blob/main/authentik/sources/oauth/views/callback.py#L59">具体代码</a>可以定位。</p><p>在日志中可以根据关键字查找到源码， 日志如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;auth_via&quot;: &quot;unauthenticated&quot;, &quot;domain_url&quot;: &quot;example.com&quot;, &quot;event&quot;: &quot;Authentication Failure&quot;, &quot;host&quot;: &quot;example.com&quot;, &quot;level&quot;: &quot;warning&quot;, &quot;logger&quot;: &quot;authentik.sources.oauth.views.callback&quot;, &quot;pid&quot;: 4721, &quot;reason&quot;: &quot;Could not determine id.&quot;, &quot;request_id&quot;: &quot;28a8d8818c63441da41051455c32d437&quot;, &quot;schema_name&quot;: &quot;public&quot;, &quot;timestamp&quot;: &quot;2024-04-09T10:30:48.464283&quot;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> authentik </tag>
            
            <tag> dingtalk </tag>
            
            <tag> aws </tag>
            
            <tag> serverless </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT 帮助之 Kubectl 查询镜像</title>
      <link href="/2024/03/27/chatgpt-help-find-k8s-images/"/>
      <url>/2024/03/27/chatgpt-help-find-k8s-images/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubectl查询脚本"><a href="#Kubectl查询脚本" class="headerlink" title="Kubectl查询脚本"></a>Kubectl查询脚本</h1><h2 id="用户"><a href="#用户" class="headerlink" title="用户:"></a>用户:</h2><p>帮我写一个脚本使用 kubectl 查询集群上所有 pod image 以 docker.foobar.com 开头的镜像列表，去重排序</p><h2 id="ChatGPT"><a href="#ChatGPT" class="headerlink" title="ChatGPT:"></a>ChatGPT:</h2><p>要编写一个脚本来查询 Kubernetes 集群上所有以 <code>docker.foobar.com</code> 开头的 Pod 镜像，并进行去重排序，我们可以使用 <code>kubectl</code> 命令行工具和一些文本处理工具，如 <code>awk</code>, <code>sort</code>, <code>uniq</code> 等。</p><p>以下是一个简单的 Bash 脚本示例，它将执行这些操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询集群上所有 pod 的镜像信息</span></span><br><span class="line">images=$(kubectl get pods --all-namespaces -o jsonpath=<span class="string">&quot;&#123;..image&#125;&quot;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27;[[:space:]]&#x27;</span> <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 过滤出以 docker.foobar.com 开头的镜像，并去重排序</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$images</span>&quot;</span> | grep <span class="string">&#x27;^docker\.foobar\.com&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个脚本的工作流程如下：</p><ol><li>使用 <code>kubectl get pods --all-namespaces -o jsonpath=&quot;&#123;..image&#125;&quot;</code> 获取集群中所有命名空间的所有 Pod 的镜像信息。</li><li>使用 <code>tr -s &#39;[[:space:]]&#39; &#39;\n&#39;</code> 将输出中的空格转换为换行符，这样每个镜像都在单独的一行。</li><li>使用 <code>grep &#39;^docker\.foobar\.com&#39;</code> 来过滤出以 <code>docker.foobar.com</code> 开头的镜像。</li><li>使用 <code>sort</code> 对结果进行排序。</li><li>使用 <code>uniq</code> 命令去除重复的镜像。</li></ol><p>要运行这个脚本，你需要在一个有 <code>kubectl</code> 访问权限的环境中执行以下步骤：</p><ol><li>将上面的脚本保存为一个文件，例如 <code>get-foobar-images.sh</code>。</li><li>通过运行 <code>chmod +x get-foobar-images.sh</code> 命令使脚本可执行。</li><li>运行脚本 <code>./get-foobar-images.sh</code>。</li></ol><p>请确保你的 <code>kubectl</code> 配置正确，并且你有足够的权限来查询所有命名空间中的 Pods。</p><h2 id="用户-1"><a href="#用户-1" class="headerlink" title="用户:"></a>用户:</h2><p>一行实现</p><h2 id="ChatGPT-1"><a href="#ChatGPT-1" class="headerlink" title="ChatGPT:"></a>ChatGPT:</h2><p>可以使用一条命令行语句来完成这个任务。在 shell 中，您可以使用管道（<code>|</code>）来连接多个命令，形成一个单一的命令行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods --all-namespaces -o jsonpath=<span class="string">&quot;&#123;..image&#125;&quot;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27;[[:space:]]&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | grep <span class="string">&#x27;^docker\.foobar\.com&#x27;</span> | <span class="built_in">sort</span> -u</span><br></pre></td></tr></table></figure><p>这条命令解释如下：</p><ul><li><code>kubectl get pods --all-namespaces -o jsonpath=&quot;&#123;..image&#125;&quot;</code>：获取所有命名空间中的 Pods 的镜像信息。</li><li><code>tr -s &#39;[[:space:]]&#39; &#39;\n&#39;</code>：将输出中的空格和换行符压缩成单个换行符，以便每个镜像占一行。</li><li><code>grep &#39;^docker\.foobar\.com&#39;</code>：过滤出以 <code>docker.foobar.com</code> 开头的镜像。</li><li><code>sort -u</code>：对结果进行排序，并使用 <code>-u</code>（唯一）选项去除重复的行。</li></ul><p>您可以直接在终端中运行这条命令，前提是您已经配置了对应的 <code>kubectl</code> 访问权限。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT 帮助之 S3 移动对象</title>
      <link href="/2024/03/21/chatgpt-help-s3-move-object/"/>
      <url>/2024/03/21/chatgpt-help-s3-move-object/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><blockquote><p>如何将 s3:&#x2F;&#x2F;foobar&#x2F;expense&#x2F;2023&#x2F;12&#x2F;02 00:00:00&#x2F;2023-12-02 00:00:00.json 这个路径移动为 s3:&#x2F;&#x2F;foobar&#x2F;expense&#x2F;2023&#x2F;12&#x2F;02&#x2F;2023-12-02.json，并将2023-12-01 到今天的全部处理，最少python脚本实现</p></blockquote><h1 id="回答"><a href="#回答" class="headerlink" title="回答"></a>回答</h1><p>要将 S3 中的对象从一个键移动到另一个键，您需要执行一个复制操作，然后删除原始对象。在AWS中，移动并不是一个原子操作，而是由复制（COPY）和删除（DELETE）操作组成的。</p><p>下面是一个Python脚本示例，它使用<code>boto3</code>库（这是AWS的官方Python SDK）来移动指定日期范围内的文件。这个脚本会遍历给定日期范围内的每一天，构建原始和目标键，并执行必要的复制和删除操作。</p><p>安装<code>boto3</code>库（如果尚未安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install boto3</span><br></pre></td></tr></table></figure><p>Python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化S3客户端</span></span><br><span class="line">s3_client = boto3.client(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义S3桶名称</span></span><br><span class="line">bucket_name = <span class="string">&#x27;foobar&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定日期范围</span></span><br><span class="line">start_date = datetime.datetime(<span class="number">2023</span>, <span class="number">12</span>, <span class="number">1</span>)</span><br><span class="line">end_date = datetime.datetime.now()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历日期范围</span></span><br><span class="line">current_date = start_date</span><br><span class="line"><span class="keyword">while</span> current_date &lt;= end_date:</span><br><span class="line">    <span class="comment"># 构建原始和目标键</span></span><br><span class="line">    original_key = <span class="string">f&#x27;expense/<span class="subst">&#123;current_date.year&#125;</span>/<span class="subst">&#123;current_date.month:02d&#125;</span>/<span class="subst">&#123;current_date.day:02d&#125;</span> 00:00:00/<span class="subst">&#123;current_date.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)&#125;</span> 00:00:00.json&#x27;</span></span><br><span class="line">    new_key = <span class="string">f&#x27;expense/<span class="subst">&#123;current_date.year&#125;</span>/<span class="subst">&#123;current_date.month:02d&#125;</span>/<span class="subst">&#123;current_date.day:02d&#125;</span>/<span class="subst">&#123;current_date.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)&#125;</span>.json&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 复制对象</span></span><br><span class="line">    copy_source = &#123;</span><br><span class="line">        <span class="string">&#x27;Bucket&#x27;</span>: bucket_name,</span><br><span class="line">        <span class="string">&#x27;Key&#x27;</span>: original_key</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s3_client.copy(copy_source, bucket_name, new_key)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Copied: <span class="subst">&#123;original_key&#125;</span> to <span class="subst">&#123;new_key&#125;</span>&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 删除原始对象</span></span><br><span class="line">        s3_client.delete_object(Bucket=bucket_name, Key=original_key)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Deleted: <span class="subst">&#123;original_key&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> s3_client.exceptions.NoSuchKey:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;No such key: <span class="subst">&#123;original_key&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Error: <span class="subst">&#123;e&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 移至下一天</span></span><br><span class="line">    current_date += datetime.timedelta(days=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>请注意，这个脚本没有处理可能的分页。如果您有很多文件，您可能需要处理S3的分页响应。另外，请确保您的AWS凭证已经配置在环境变量中，或者您已经在<code>.aws/credentials</code>文件中配置了它们，否则您需要在创建<code>boto3.client</code>时手动提供它们。</p><p>在运行此脚本之前，请确保您有足够的权限来执行这些操作，并且您已经备份了重要数据，防止意外丢失。</p>]]></content>
      
      
      
        <tags>
            
            <tag> GPT </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts 添加堆叠工具选项</title>
      <link href="/2024/03/21/echarts-toolbox-add-stack/"/>
      <url>/2024/03/21/echarts-toolbox-add-stack/</url>
      
        <content type="html"><![CDATA[<p><a href="https://echarts.apache.org/en/option.html#toolbox.feature.magicType">https://echarts.apache.org/en/option.html#toolbox.feature.magicType</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    <span class="attr">toolbox</span>: &#123;</span><br><span class="line">        <span class="attr">feature</span>: &#123;</span><br><span class="line">            <span class="attr">magicType</span>: &#123;</span><br><span class="line">                <span class="attr">type</span>: [<span class="string">&#x27;line&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>, <span class="string">&#x27;stack&#x27;</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">series</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>type 为 ‘stack’ 时，会将所有的 bar 类型的 series 堆叠在一起。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ECharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让 JupyterHub 支持 LDAP</title>
      <link href="/2024/03/21/let-jupyterhub-support-ldap/"/>
      <url>/2024/03/21/let-jupyterhub-support-ldap/</url>
      
        <content type="html"><![CDATA[<p>JupyterHub 其实是支持的 LDAP 认证，但是模式是 LDAPS，对于没有 LDAP 非加密端口则不支持</p><p>下面是一段 Dockerfile, 用于修复这个问题</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> jupyterhub/k8s-hub:latest</span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> root </span><br><span class="line"><span class="comment"># Fix LDAP authenticator use_ssl issue</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> FILEPATH=`python -c <span class="string">&quot;import pkg_resources; import os; print(os.path.join(pkg_resources.get_distribution(&#x27;jupyterhub-ldapauthenticator&#x27;).location, &#x27;ldapauthenticator&#x27;, &#x27;ldapauthenticator.py&#x27;))&quot;</span>` &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">sed -i <span class="string">&#x27;s/ldap3.AUTO_BIND_NO_TLS if self.use_ssl else ldap3.AUTO_BIND_TLS_BEFORE_BIND/ldap3.AUTO_BIND_NO_TLS if not self.use_ssl else ldap3.AUTO_BIND_TLS_BEFORE_BIND/g&#x27;</span> <span class="variable">$&#123;FILEPATH&#125;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> jovyan</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JupyterHub </tag>
            
            <tag> LDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机和电脑</title>
      <link href="/2024/02/08/mobile-and-pc/"/>
      <url>/2024/02/08/mobile-and-pc/</url>
      
        <content type="html"><![CDATA[<p>最近在手机和电脑间切换，发现手机主要用于娱乐，使用上主要是方便，而电脑则是用于工作，使用上主要是偏向效率。</p><p>这两点的根本不同不能过于颠倒，比如你说用手机工作，用电脑娱乐。这种总是有些拧巴，为什么？</p><p>手机当前主要是触摸屏幕，所以对于容错性比较高的场景适用，而且最好是没有输入键盘的操作</p><p>电脑由于大部分不是触屏，所以对于精确效率的场景比较合适，尤其是键盘这种输入设备的操作</p><p>手机主要在于便携和多传感器，可以认为是一个采集终端</p><p>电脑主要在于物理设备和硬件，可以看作是一个处理中心</p><p>仔细品，看看现在这两个设备上的应用有哪些不同，以及流行的分别是什么就知道了，同时在开发对应的应用的同时也要按照这种设计顺应不同的方向，别搞反了，除非你是主打“差异化”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Shell 命令系列之 split 小技巧</title>
      <link href="/2024/01/05/shell-split-trick/"/>
      <url>/2024/01/05/shell-split-trick/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>这段代码有什么问题？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> -b <span class="variable">$SPLIT_SIZE</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>_part_&quot;</span></span><br></pre></td></tr></table></figure><p>答：如果是一行行的记录，在按照字节切割的时候会出现断行</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>我： 使用 shell split 切割文件 如何保证按照文件大小切割并且不断行？比如按照 100MB 文件大小</p><p>GPT: <code>split</code> 命令可以用来将文件分割成多个小文件。<code>-b</code> 参数可以用来指定每个小文件的大小。例如，如果你想将文件分割成每个100MB的小文件，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> -b 100m file_name</span><br></pre></td></tr></table></figure><p>这将创建一系列的文件，名字为 <code>xaa</code>, <code>xab</code>, <code>xac</code> 等等，每个文件的大小都接近100MB。</p><p>但是，这种方法可能会在某些行的中间切割文件，这可能会导致问题，因为被切割的行可能无法正确解析。</p><p>如果你希望在分割文件时保持完整的行，那么你可以使用 <code>-C</code> 参数。这个参数允许你指定每个输出文件的最大行数，但是 <code>split</code> 命令会保证每个输出文件不会在一行的中间结束。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> -C 100m file_name</span><br></pre></td></tr></table></figure><p>这将创建一系列的文件，每个文件的大小都接近但不超过100MB，并且每个文件都会在一个完整的行结束。但是，这个命令可能会导致每个输出文件的大小略微超过你指定的大小，因为它会包含最后一个完整的行，即使这会导致文件的大小超过你指定的大小。</p><p>注意：<code>-C</code> 参数可能在一些老版本的 <code>split</code> 中不可用。</p><p>我：详细解释下 -C 和 -b 的区别？</p><p>GPT: <code>split</code> 命令的 <code>-b</code> 和 <code>-C</code> 参数都用于指定输出文件的大小，但是它们在处理文件的行尾时有所不同。</p><p><code>-b</code> 参数指定了每个输出文件的字节大小。例如，<code>split -b 100m file_name</code> 将会把输入文件 <code>file_name</code> 分割成大小接近100MB的小文件。这个命令将在指定的字节位置处分割文件，不考虑这个位置是否在一行的中间。</p><p>另一方面，<code>-C</code> 参数也用于指定每个输出文件的字节大小，但是它会保证每个输出文件在一个完整的行结束。例如，<code>split -C 100m file_name</code> 将会把输入文件 <code>file_name</code> 分割成大小接近但不超过100MB的小文件，而且每个文件都会在一个完整的行结束。这意味着，如果一个文件的大小正好是100MB，但是最后一个字节恰好在一行的中间，那么 <code>split</code> 命令会将这整行包含在当前文件中，而不是将它分割到下一个文件中。这可能会导致输出文件的大小略微超过你指定的大小。</p><p>总的来说，如果你希望严格控制输出文件的大小，并且不关心文件是否在一行的中间被分割，那么你应该使用 <code>-b</code> 参数。如果你希望每个输出文件都在一个完整的行结束，那么你应该使用 <code>-C</code> 参数，但是这可能会导致输出文件的大小略微超过你指定的大小。</p><p>我：请给我一些测试代码测试这两个区别的实现</p><p>GPT: 好的，让我们创建一个包含多行文本的文件，然后使用 <code>split</code> 命令的 <code>-b</code> 和 <code>-C</code> 参数来分割它。</p><p>首先，我们创建一个文本文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is line 1</span></span><br><span class="line"><span class="string">This is line 2</span></span><br><span class="line"><span class="string">This is line 3</span></span><br><span class="line"><span class="string">This is line 4</span></span><br><span class="line"><span class="string">This is line 5&quot;</span> &gt; testfile.txt</span><br></pre></td></tr></table></figure><p>然后，我们可以使用 <code>-b</code> 参数来分割这个文件。我们将每个输出文件的大小设置为15字节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> -b 15 testfile.txt test_b_</span><br></pre></td></tr></table></figure><p>如果你查看 <code>test_b_aa</code> 和 <code>test_b_ab</code> 文件，你会看到它们被分割在了 “line 1” 和 “This is line 2” 之间，这是因为 “This is line 1\n” 正好是15字节。</p><p>现在，我们使用 <code>-C</code> 参数来分割同一个文件。我们还是将每个输出文件的大小设置为15字节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> -C 15 testfile.txt test_C_</span><br></pre></td></tr></table></figure><p>这次，如果你查看 <code>test_C_aa</code> 和 <code>test_C_ab</code> 文件，你会看到它们被分割在了 “This is line 1” 和 “This is line 2” 之间，即使 “This is line 1\n” 超过了15字节。这是因为 <code>-C</code> 参数保证了每个输出文件都在一个完整的行结束。</p><p>请注意，这个例子是为了演示 <code>-b</code> 和 <code>-C</code> 参数的行为，实际上在大多数情况下，你会使用更大的文件和更大的输出文件大小。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>经过测试 15 字节是测不出来的，要 25，同时如果设为 5 字节（少于每行的字节数）也是有问题的，可以试试</p>]]></content>
      
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP 状态码</title>
      <link href="/2024/01/03/http-status-code/"/>
      <url>/2024/01/03/http-status-code/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>HTTP状态码用于表示一个HTTP请求是否成功，以及在不成功的情况下出现了什么类型的错误。状态码分为几个范围，每个范围代表了一类响应。</p><p>1xx（100-199）：信息性状态码，表示接收的请求正在处理。<br>2xx（200-299）：成功状态码，表示请求正常处理完毕。<br>3xx（300-399）：重定向状态码，要完成请求需要进一步操作。<br>4xx（400-499）：客户端错误状态码，表示请求有语法错误或请求无法实现。<br>5xx（500-599）：服务器错误状态码，表示服务器在处理请求时发生了错误。</p><h2 id="不常见的状态码"><a href="#不常见的状态码" class="headerlink" title="不常见的状态码"></a>不常见的状态码</h2><p>101：这是一个信息性（1xx）状态码，表示服务器理解了客户端的请求，并且通过这个状态码告知客户端它将切换到请求的协议，这通常用在WebSockets协议切换中。</p><p>104: 这是一个由Nginx定义的状态码，表示连接已经重置。这通常发生在客户端取消了请求的情况下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#x27;Connection aborted.&#x27;, ConnectionResetError(104, &#x27;Connection reset by peer&#x27;))</span><br></pre></td></tr></table></figure><p>上面的错误信息就是一个例子，它表示客户端取消了请求，导致连接被重置。出现状况是 AWS Nat Gateway 会在 30 秒内关闭空闲连接，所以在这种情况下，客户端会收到一个 104 状态码。参见文档 <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">AWS Nat Gateway</a></p><p>499：这个状态码实际上不是一个官方的HTTP状态码，它是由Nginx定义的，用来表示客户端在服务器有机会发送回响应之前关闭了连接。也就是说，当服务器准备发送回响应，但是发现客户端已经关闭了连接时，Nginx会记录这个状态码。这通常发生在客户端取消了请求的情况下。</p><p>429: 这是一个客户端错误（4xx）状态码，表示请求过多。这个状态码通常用于限制客户端对服务器的请求频率，以防止服务器过载。注意这是一个常见的状态码，用于限制请求频率。</p>]]></content>
      
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT 发布一周年感想</title>
      <link href="/2023/11/30/chatgpt-one-year/"/>
      <url>/2023/11/30/chatgpt-one-year/</url>
      
        <content type="html"><![CDATA[<p>2022 年 11 月 30 日，ChatGPT 全球发布，开创了大语言模型的新时代。</p><p>从最开始的毫不在乎到现在的离不开，感受到的不只是震撼。</p><p>以前使用 Siri 总是觉着很蠢听不懂人话，而现在的 ChatGPT 从直观反馈来说，应该是不仅仅能听懂还能理解（所谓的人类理解），就算你中文夹杂着英文也是可以的，感觉语言的巴别塔好像被攻破了。</p><p>但是我觉着，如果将 ChatGPT 作为“好用”工具，主要体现在两点，理解需求和知识集合，这两点缺一不可，同时也相辅相成。</p><h3 id="一、理解需求"><a href="#一、理解需求" class="headerlink" title="一、理解需求"></a>一、理解需求</h3><p>很多人凭着新鲜感试用了下，感觉回答的也就很一般，不好用，甚至觉着它不明白我要问什么。可是真的是这样吗？</p><p>首先，很多人连需求都没有理清楚，而且有时候说话是有上下文的，想想看，如果一个陌生人突然问你“吃饭了吗”，你知道他究竟是什么意思吗？</p><p>GPT4 出来的时候我问了问题，它会将你的需求描述一下，按照它的理解方式去执行，这一点就很厉害了，因为现实中很多人都做不到。</p><p>当然，缺点也很明显， token 长度，就如同人的记忆，当然还是越大越好，就好像你的朋友一样，越熟悉越明白。</p><h3 id="二、知识集合"><a href="#二、知识集合" class="headerlink" title="二、知识集合"></a>二、知识集合</h3><p>ChatGPT 如果只是能理解你说的话虽然是进步但是也不会特别好用，主要是 OpenAI 这个公司整理了很多高质量数据，互联网海洋般的数据。</p><p>这一点才是我主要付费的原因，得益于互联网开放的精神，可能也恰恰是这些高质量数据才能通过量变引起质变。</p><p>现在 ChatGPT 就像一个特别好的老师，拥有整个互联网知识，而如何向老师学习在于你是如何使用的。</p><p>你可以问问题，你也可以将你理解的问题找他对答案，着实有趣。</p><p>当然，还是有一些专有知识无从获取，这点它就不如人意了，会出现一本正经的胡说八道了，这点也是广为诟病的问题。</p><p>所以它可以辅助你，但你最好是个专家能够辨别出 1% 这种级别的错误。对于编程倒是很好确定，执行下就行了，但是对于无法验证的领域就有些危险了。</p><h3 id="预测推理"><a href="#预测推理" class="headerlink" title="预测推理"></a>预测推理</h3><p>预测是我使用后最明显的感受，打字机效果的输出。通过我粗浅的分析，感觉人类也只不过是做了一些高级的预测，就好像说话一样——你真的懂你为什么说出下一个字吗？是不是脱口而出呢？</p><p>而推理如同思考一样，人脑也是，如果想一想再回答，那么效果可能会相对好些，也许 GPT 这条路可能会对人类的模拟更加进了一步！</p><h3 id="未来展望"><a href="#未来展望" class="headerlink" title="未来展望"></a>未来展望</h3><p>语言使人类产生文明，那么以后的人工智能时代是不是能够产生新的文明呢？</p><p>目前还不得而知，但是有一点即将发生，那就是改变生产关系。　</p>]]></content>
      
      
      
        <tags>
            
            <tag> GPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/11/30/hello-world/"/>
      <url>/2023/11/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
